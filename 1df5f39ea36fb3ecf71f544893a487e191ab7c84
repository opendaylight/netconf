{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ece1823a_428a49af",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-04-30T10:26:41Z",
      "side": 1,
      "message": "Rather investigate usage of `SchemaTreeInference` in List as stack is something mutable?",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b635f3e_ac59657a",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-04-30T10:35:28Z",
      "side": 1,
      "message": "Ideally, can we remove this list? Why is not enough list of QNames?",
      "parentUuid": "ece1823a_428a49af",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95ae0334_35c0db9a",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-04-30T12:37:19Z",
      "side": 1,
      "message": "This is list for one reason only - wildcards. So we have 2 cases:\n1. Exact filter - there will be always only 1 element in this list that will represent exact path - easy.\n2. Wildcard filter (full wildcard or partial doesn\u0027t matter) - here we need this list. Lets say there is this filter:\n  \u003cstream-subtree-filter\u003e\n    \u003ctoasterRestocked xmlns\u003d\"\"\u003e\n      \u003camount/\u003e\n    \u003c/toasterRestocked\u003e\n  \u003c/stream-subtree-filter\u003e\n\nWhen you look into schema you won\u0027t necessarily find \"toasterRestocked\" inside only one model. It can be present in two, three or more models, it can be augmented and so on. At this point we only have local name so there is no way to determine which one to use. Because of that every possible \"toasterRestocked\" from every model should be saved. Let say we had two this time: namespace1_toasterRestocked and namespace2_toasterRestocked now saved into wildcard. The children will have 2 stacks respectively. When got to \"amount\" then we will try look for it under each path: namespace1_toasterRestocked and namespace2_toasterRestocked and record and do things with them. So I need to know parentStack to then for each and try find child. Also parent can be choice - in that case I should make 2 steps - in case and in child. That\u0027s why only QName is not enough.",
      "parentUuid": "3b635f3e_ac59657a",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "888ed566_a5ec91c7",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-04-30T12:41:06Z",
      "side": 1,
      "message": "QName contains all: local name, revision and namespace",
      "parentUuid": "95ae0334_35c0db9a",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb8ce2ba_cd400f28",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-04-30T13:38:31Z",
      "side": 1,
      "message": "Yes but it is probably naming issue. This \"children\" is list of paths where we will be searching for children on the next step of recursion. Name is misleading - it rather should be called \"pathsToElementSchema\" - i.e. list that contains possible paths(or only one path in case with exact node) that are leading to current element we processing in schema tree. If current element has children then on next iteration have any children - then this list will be used to search for them.",
      "parentUuid": "888ed566_a5ec91c7",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1a0158_2f2380e0",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-04-30T13:44:00Z",
      "side": 1,
      "message": "Seme for \"childrenQNames\" - elementQNames",
      "parentUuid": "fb8ce2ba_cd400f28",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "937e87c7_d8674589",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-04-30T13:54:13Z",
      "side": 1,
      "message": "And QName contains all that - you right. But I can\u0027t take QName and find node in EffectiveModelContxt - it should be path and Qname. Path is coming from \"parents\" parameter and QName is created below depending on exact/wildcard. Then \"childrenQNames\" is something that is later used to create NamespaceSelection for SubtreeFilter. And \"children\" is new path that used in recursion if current element has children.",
      "parentUuid": "8d1a0158_2f2380e0",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d46f7ff_5fdf53ba",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-05-02T05:55:26Z",
      "side": 1,
      "message": "I would expect that stack is there be to used to find child(ren) as we wish.",
      "parentUuid": "937e87c7_d8674589",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c4bcf0e_b7e0f56d",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-05-02T08:09:02Z",
      "side": 1,
      "message": "Yes it is precisely what it used for. Each stack in the list is used to find child(ren) under parent. Because of wildcard there can be multiple parents. So I have to search under each. And for that I am storing path to each parent in \"parents\" list. This \"children\" list will become \"parents\" list when we get to line 223 - on next iteration of the recursion.\nEach iteration of this method is searching for child(ren) under every parent. I can\u0027t make it branch every time when there are multiple parent/child nodes in schema. Reason for that is we can go through XMLStreamReader events only one time. Because of that List\u003cSchemaInferenceStack\u003e.",
      "parentUuid": "8d46f7ff_5fdf53ba",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fddc2fa3_abe1c456",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-05-02T08:31:43Z",
      "side": 1,
      "message": "How many stack we have for one data?",
      "parentUuid": "9c4bcf0e_b7e0f56d",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0429e461_90ec4fd6",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 62
      },
      "lineNbr": 109,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-05-02T09:58:42Z",
      "side": 1,
      "message": "If filter is exact all the way (means there is namespace for every element) - one stack in this list on every iteration.\nIf wildcard is present - then there will be as many as matching nodes in schema context(matching by local name).\nUsing same example that I mentioned above it will be like this:\n1) At start - one empty stack\n2) On first iteration search will find two toasterRestocked in context - list will have two stacks: one \"/namespace1_toasterRestocked\" and second one \"/namespace2_toasterRestocked\"\n3) On second iteration search will look for \"amount\" under \"/namespace1_toasterRestocked\" and \"/namespace2_toasterRestocked\" - how many nodes was found - that many paths will be. Those then will be used on next iteration.\nOf course in this case they won\u0027t matter because \"amount\" does not have children in filter. Method will just return SelectionNode at that point.",
      "parentUuid": "fddc2fa3_abe1c456",
      "revId": "1df5f39ea36fb3ecf71f544893a487e191ab7c84",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}