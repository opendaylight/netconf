{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c5a3a0c8_c230bf43",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeMatcher.java",
        "patchSetId": 26
      },
      "lineNbr": 38,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-08T08:18:51Z",
      "side": 1,
      "message": "then we do not need two constructors?",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23a8d2e6_2d4cb24c",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeMatcher.java",
        "patchSetId": 26
      },
      "lineNbr": 38,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-10-08T19:37:46Z",
      "side": 1,
      "message": "There are plenty of usages without a path parameter. I decided not to change the already existing code base and just extend class with one more constructor",
      "parentUuid": "c5a3a0c8_c230bf43",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d4eb318_4ec57597",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeMatcher.java",
        "patchSetId": 26
      },
      "lineNbr": 38,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-10T07:18:47Z",
      "side": 1,
      "message": "ACK",
      "parentUuid": "23a8d2e6_2d4cb24c",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86636684_42ecbb28",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeMatcher.java",
        "patchSetId": 26
      },
      "lineNbr": 80,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-08T08:18:51Z",
      "side": 1,
      "message": "private",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37aad420_1ba1c614",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeMatcher.java",
        "patchSetId": 26
      },
      "lineNbr": 80,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-10-09T07:52:44Z",
      "side": 1,
      "message": "https://git.opendaylight.org/gerrit/c/netconf/+/116911/comment/baa7d983_5755fd94/",
      "parentUuid": "86636684_42ecbb28",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baa7d983_5755fd94",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/SubtreeEventStreamFilter.java",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-08T08:18:51Z",
      "side": 1,
      "message": "we would have here just: new SubtreeMatcher(filter, body, path).matches()",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f266fae_a8a92bec",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/SubtreeEventStreamFilter.java",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-10-08T19:37:46Z",
      "side": 1,
      "message": "I\u0027m not sure if we really want to create a new instance of SubtreeMatcher even when the path is not permitted",
      "parentUuid": "baa7d983_5755fd94",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ef4796_a8108f46",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/SubtreeEventStreamFilter.java",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-09T07:12:31Z",
      "side": 1,
      "message": "ACK ðŸ˜Š and is permitsPath able to accept empty path? then that if will be there instead of SubtreeMatcher#matches",
      "parentUuid": "2f266fae_a8a92bec",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3dc8375d_4ff35f83",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/SubtreeEventStreamFilter.java",
        "patchSetId": 26
      },
      "lineNbr": 26,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-10-09T07:52:44Z",
      "side": 1,
      "message": "Sure, it will not iterate through pathArguments and just return true",
      "parentUuid": "20ef4796_a8108f46",
      "revId": "751d197fd95668e23f8bfa1b10b1b331569c6ff9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}