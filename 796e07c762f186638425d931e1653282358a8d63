{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e94b44e3_dcda7a95",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-05-06T08:35:19Z",
      "side": 1,
      "message": "this means that we ignore every other child under case node that may have same local name. But what there is one such that is coming from augmentation?",
      "range": {
        "startLine": 186,
        "startChar": 36,
        "endLine": 186,
        "endChar": 42
      },
      "revId": "796e07c762f186638425d931e1653282358a8d63",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dba6717_27b35c97",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-05-06T08:54:16Z",
      "side": 1,
      "message": "why is this break in code above?",
      "parentUuid": "e94b44e3_dcda7a95",
      "range": {
        "startLine": 186,
        "startChar": 36,
        "endLine": 186,
        "endChar": 42
      },
      "revId": "796e07c762f186638425d931e1653282358a8d63",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f683c6c_b00b77ca",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-05-06T09:12:29Z",
      "side": 1,
      "message": "Break above is in case for exact namespace - means there is only one node with matching QName and one only - when it is found there is no point in searching further.\nBreak here however is wildcard case - means that XML contains only local name and no namespace. There can be multiple child nodes in schema right next to each other that have same local name. It is possible as long as they have different namespace and/or revision. So in this case we can\u0027t be sure what statement to use in filter, hence - loop here should not be stopped here because there is possibility that next child(ren) may have matching local name (i.e. should be also added into wildcard NamespaceSelection).",
      "parentUuid": "2dba6717_27b35c97",
      "range": {
        "startLine": 186,
        "startChar": 36,
        "endLine": 186,
        "endChar": 42
      },
      "revId": "796e07c762f186638425d931e1653282358a8d63",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76ffc2b5_e703cbd5",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-05-06T09:17:14Z",
      "side": 1,
      "message": "If you wonder why this change did not broke any test then the answer is there is no test case for it. You added break only when we are dealing with choices and test model doesn\u0027t contain augmented choice or choice with same structure but different revision. I did not add it because we already have test for those but using simpler structure - containers and leaves.",
      "parentUuid": "6f683c6c_b00b77ca",
      "range": {
        "startLine": 186,
        "startChar": 36,
        "endLine": 186,
        "endChar": 42
      },
      "revId": "796e07c762f186638425d931e1653282358a8d63",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a00306_cfda0fd6",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-05-06T09:19:02Z",
      "side": 1,
      "message": "To put is simple - for wildcard we never stop checking children midway because any of them may have matching local name.",
      "parentUuid": "76ffc2b5_e703cbd5",
      "range": {
        "startLine": 186,
        "startChar": 36,
        "endLine": 186,
        "endChar": 42
      },
      "revId": "796e07c762f186638425d931e1653282358a8d63",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2726a8bc_9e3263a1",
        "filename": "protocol/databind/src/main/java/org/opendaylight/netconf/databind/subtree/SubtreeFilterReader.java",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-05-06T10:07:20Z",
      "side": 1,
      "message": "I disagree, for exact you search in one model, for wildcard you go over all models. It has no sense to not break it here or it has no sense to iterate over all models? In the end we would have one case added multiple times by iterating over other models?",
      "parentUuid": "f5a00306_cfda0fd6",
      "range": {
        "startLine": 186,
        "startChar": 36,
        "endLine": 186,
        "endChar": 42
      },
      "revId": "796e07c762f186638425d931e1653282358a8d63",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}