{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2bfee3f3_49bfe899",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-03-14T08:33:26Z",
      "side": 1,
      "message": "how can \"aa\" equals to xml? do we need to check it?",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "324f7da0_09de2763",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-03-14T08:38:24Z",
      "side": 1,
      "message": "ok, lets say it can, perhaps would be better if prefixOf will not return us this results?",
      "parentUuid": "2bfee3f3_49bfe899",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbfb8dd9_21a9fe6d",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-03-14T16:23:37Z",
      "side": 1,
      "message": "I moved test and also added case that illustrates when we can get \"xml\" value. Having this if statement slows the process a bit but moving it inside prefixOf will only complicate things. Because of how it works recursively and construct prefix character by character depending on index it will end up just the same if in different place and probably code will be less readable.\nThere is alternative to it - we can generate prefixes without this if and after we have full map check if there are \"xml\" and \"xmlns\" inside and simply add number 0 to them. So it will be \"xml0\" and \"xmlns0\". Workaround but it will work because prefixes are generated only using letters.\nAlso we can(but not recommended) just remove it - prefix xml will be generated only if we have more than 16572 namespaces. How realistic is it that there will be that much in filter node?",
      "parentUuid": "324f7da0_09de2763",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f254c51_387cf0e0",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-03-17T08:20:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbfb8dd9_21a9fe6d",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67c080d1_9a1aadcd",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-03-17T08:33:30Z",
      "side": 1,
      "message": "aha, so we already know that 16572 returns something invalid - can we skip it?",
      "parentUuid": "9f254c51_387cf0e0",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29f1a743_2d62c5cc",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-03-17T12:03:34Z",
      "side": 1,
      "message": "This will only omit call prefixOf 2 times at best for \"xml\" and \"xmlns\" and it will be the same if statement as it is now but with 2 big \"magic\" numbers that we skip - not readable:\n\nif (counter \u003d\u003d 16573 || counter \u003d\u003d \"other-number-that-I-didn\u0027t-calculate-yet\") {\n  counter++;\n  continue;\n}\n\nThis is worse to look at. If you have other idea of skipping it then I didn\u0027t catch it. I already proposed alternative to this \"if\" inside cycle.",
      "parentUuid": "67c080d1_9a1aadcd",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eba1a6f1_0617bb70",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-03-18T10:36:14Z",
      "side": 1,
      "message": "Moved it separately",
      "parentUuid": "29f1a743_2d62c5cc",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b0682a9_dda6c3ed",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-03-19T08:17:22Z",
      "side": 1,
      "message": "do it as you think its better",
      "parentUuid": "eba1a6f1_0617bb70",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ebffd30_0b04ccd9",
        "filename": "protocol/netconf-api/src/main/java/org/opendaylight/netconf/api/subtree/Prefixes.java",
        "patchSetId": 22
      },
      "lineNbr": 37,
      "author": {
        "id": 9063
      },
      "writtenOn": "2025-03-19T08:49:10Z",
      "side": 1,
      "message": "rolled back. IMO it is better with simply checking it like it was. If performance issue arise this part can be changed separately as I proposed.",
      "parentUuid": "4b0682a9_dda6c3ed",
      "revId": "37194baadfe2f3c69e219bac4f22448b4a3965bc",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}