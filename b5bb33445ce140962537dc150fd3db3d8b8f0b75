{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc922c16_ee84032e",
        "filename": "plugins/netconf-client-mdsal/src/main/java/org/opendaylight/netconf/client/mdsal/spi/NetconfDataOperations.java",
        "patchSetId": 54
      },
      "lineNbr": 78,
      "author": {
        "id": 649
      },
      "writtenOn": "2025-09-10T03:19:58Z",
      "side": 1,
      "message": "undocumented\nshould be final",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 78,
        "endChar": 6
      },
      "revId": "b5bb33445ce140962537dc150fd3db3d8b8f0b75",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54b3acae_32aa6507",
        "filename": "plugins/netconf-client-mdsal/src/main/java/org/opendaylight/netconf/client/mdsal/spi/NetconfDataOperations.java",
        "patchSetId": 54
      },
      "lineNbr": 90,
      "author": {
        "id": 649
      },
      "writtenOn": "2025-09-10T03:19:58Z",
      "side": 1,
      "message": "nullability?\n\nNetconfDataTreeService is exposed from there, so I expect this is not a public constructor, as we really should be assuming AbstractNetconfDataTreeService, which means we hold similar state, but execute things directly on NetconfBaseOps (or equivalent)\n\nThe point is NetconfDataTreeService should be treated as deprected indirection",
      "range": {
        "startLine": 90,
        "startChar": 28,
        "endLine": 90,
        "endChar": 32
      },
      "revId": "b5bb33445ce140962537dc150fd3db3d8b8f0b75",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}