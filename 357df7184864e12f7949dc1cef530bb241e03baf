{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9286f7dc_29057063",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-04T20:04:35Z",
      "side": 1,
      "message": "This doesn\u0027t seem to comply with RFC 8072:\nhttps://www.rfc-editor.org/rfc/rfc8072.html#page-20\n\u003e          container edit-status {\n\u003e           description\n\u003e             \"This container will be present if there are\n\u003e              edit-specific status responses to report.\n\u003e              If all edits succeeded and the \u0027global-status\u0027\n\u003e              returned is \u0027ok\u0027, then a server MAY omit this\n\u003e              container.\";\n\nSo `edit-status` can be omitted if `global-status` is `ok`, otherwise the status of the edits, I think, should be reported as long as there is edit-specific status.",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7132f546_26bcb647",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "not an issue here, no edit-status was produces together with global ok \nfor both states before and after",
      "parentUuid": "9286f7dc_29057063",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d45fca2c_9a06eb35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "also rebase pls",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a95328_d1e61699",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-05T08:51:35Z",
      "side": 1,
      "message": "My point here is that `edit-status` should exist regardless of global errors when the status of individual edit exists. The only exception when `edit-status` may be omitted is when `global-status` is okay. So global-errors \u0026 edit-status are not mutually exclusive and this change shouldn\u0027t be made.",
      "parentUuid": "7132f546_26bcb647",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7499d3ec_d96419bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T13:16:20Z",
      "side": 1,
      "message": "RFC uses special words to signify the requirements in specification.\nThere is no `MUST` or `SHOULD` within quoted description but only `MAY`.\n\nAccording to https://datatracker.ietf.org/doc/html/rfc2119#section-5\nMAY means \"that an item is truly optional\" and it\u0027s up to implementation either to include container or not. \n\nIn our implementation if there is a global error (transaction commit failed), __each__ edit-specific status will be __always__ a success (transaction operation before commit was successful). So it seems reasonable to omit this section as useless and confusing (some operation failed but it\u0027s also shown as being successful).\n\nOmitting `edit-status` container seems legit enough",
      "parentUuid": "c6a95328_d1e61699",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5cbf115_c5d40c42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-05T17:57:34Z",
      "side": 1,
      "message": "The current implementation for NETCONF puts errors into the global error even for the one that occurred for a specific edit operation, so it is actually confusing to see the ok\u0027s in `edit-status`. But it\u0027s because the error is in the wrong place.\n\nLet\u0027s assume a case where all the edits are successful and an error actually occurs during the commit phase. In that case seeing the ok\u0027s in the `edit-status` would make it more clear that the edit operations took place and they were successful but there was an error after. Not sure this would be clear to the people not very familiar with the implementation without `edit-status`.",
      "parentUuid": "7499d3ec_d96419bd",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a1fabe_9406ec7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-09-06T13:45:47Z",
      "side": 1,
      "message": "So there are three possibilities:\n1. choice global-status is present as \u003cok\u003e (which is an implicit case!)\n2. choice global-status is present as \u003cglobal-errors\u003e\n3. choice global-status is not present\n\nIn case 1: edit-status MAY be present, but if it present it would have to contain just success reports (and therefore it can be omitted)\n\nIn case 2: edit-status MAY be present, but may also be absent (e.g. the patch failed, but we may not have information why)\n\nIn case 3: edit-status MUST be present\n\nThe overall spirit is:\n- it MUST be possible to ascertain whether the entire patch request succeeded or failed\n- the server MAY provide additional information as to which particular operation failed\n\nAlso the server is free to provide very flexible information. As an example, an edit may be validated in two steps, as we do it for MD-SAL\u0027s create operation. We have SATB and check if the data does not exist -- which we could carry as a per-edit status. But after that we need to commit the transaction, which in turn may end up being rebased due to concurrent transactions happening -- and if the commit fails, that translates to a global status -- and untangling that back to individual edits is impossible simply because edits may overlap (and hence there may be fewer logical operations in the transaction than the number of edits).",
      "parentUuid": "c5cbf115_c5d40c42",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e01293ef_58032368",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-07T01:20:14Z",
      "side": 1,
      "message": "I agree that skipping the status of individual edit when the PATCH request fails is not incompliant with the standard but my reading is that the status information should be provided whenever it is available except when the request is fully successful.\n\nBut at the end of the day the difference probably is not critical and I guess there is pros/cons either way.",
      "parentUuid": "d7a1fabe_9406ec7a",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d807825_3282ea1d",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "merge nested if-else with upper else\ncurrent structure: if{ }else{ if{ }else{ } }\nshould be: if{ }else if{ }else{ }",
      "range": {
        "startLine": 43,
        "startChar": 7,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93b16f06_29c80e5a",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d807825_3282ea1d",
      "range": {
        "startLine": 43,
        "startChar": 7,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b084b11c_1187d6ff",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "dont nest conditions if you can avoid these\nelse { if { }} -\u003e else if { }",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 60,
        "endChar": 21
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "929a8c7a_ffa3a304",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b084b11c_1187d6ff",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 60,
        "endChar": 21
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba5dd3cf_61d1b19a",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "this belong to top level\nclosure of top element and writer flush should not be conditional",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 31
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0e7cc26_124edbce",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba5dd3cf_61d1b19a",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 68,
        "endChar": 31
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ef27d90_6cc4a386",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/XmlPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "exact same issues as for json writer please update accordingly",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c08285e_ca57963a",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/XmlPatchStatusBodyWriter.java",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ef27d90_6cc4a386",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd0ab55_8ffa283a",
        "filename": "restconf/restconf-nb/src/test/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriterTest.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "ArrayList is extra here you just convert immuatable list into mutable one for no reason.\nList.of() is enough to create a list \nsame everywhere below",
      "range": {
        "startLine": 33,
        "startChar": 71,
        "endLine": 33,
        "endChar": 104
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65e51e33_fad1b125",
        "filename": "restconf/restconf-nb/src/test/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriterTest.java",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebd0ab55_8ffa283a",
      "range": {
        "startLine": 33,
        "startChar": 71,
        "endLine": 33,
        "endChar": 104
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37c5bbc7_dcc25f99",
        "filename": "restconf/restconf-nb/src/test/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriterTest.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "this input is invalid bc it produces global error together with per-operation errors. we do not expect this case. \nif both contain global error then result should be same dont mater if there is any per operation error or not",
      "range": {
        "startLine": 35,
        "startChar": 75,
        "endLine": 36,
        "endChar": 52
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31000247_875a996a",
        "filename": "restconf/restconf-nb/src/test/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/JsonPatchStatusBodyWriterTest.java",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "created statusEntity without error for this input",
      "parentUuid": "37c5bbc7_dcc25f99",
      "range": {
        "startLine": 35,
        "startChar": 75,
        "endLine": 36,
        "endChar": 52
      },
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f6a46e5_0e4262ed",
        "filename": "restconf/restconf-nb/src/test/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/XmlPatchStatusBodyWriterTest.java",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 8894
      },
      "writtenOn": "2023-09-05T07:40:19Z",
      "side": 1,
      "message": "exact same set of issues as for json writer test, pls update",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "062c5215_0bfe1605",
        "filename": "restconf/restconf-nb/src/test/java/org/opendaylight/restconf/nb/rfc8040/jersey/providers/patch/XmlPatchStatusBodyWriterTest.java",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 9229
      },
      "writtenOn": "2023-09-05T08:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f6a46e5_0e4262ed",
      "revId": "357df7184864e12f7949dc1cef530bb241e03baf",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}