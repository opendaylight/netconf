{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2573c7d5_034d7452",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 11
      },
      "lineNbr": 85,
      "author": {
        "id": 9074
      },
      "writtenOn": "2025-09-09T13:01:09Z",
      "side": 1,
      "message": "I think here could be some synchronization issue\nIf channelRead0() is called between \n blockedRequests.poll();\nand\n if (!blockedRequests.isEmpty()) {\n     super.channelRead0(ctx, blockedRequests.peek());\n }\n\nthis could result in calling super.channelRead0() 2 times with same FullHttpRequest",
      "revId": "13f21e431dad47ac09ae4e2c22a4160eb1e6489a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d5038e7_db279e28",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 11
      },
      "lineNbr": 85,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-09-10T06:42:34Z",
      "side": 1,
      "message": ".. should be fixed by moving poll to channelRead0, additionally we should replace size() call with isEmpty() which seems to be more reliable:\n\nhttps://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/ConcurrentLinkedDeque.html",
      "parentUuid": "2573c7d5_034d7452",
      "revId": "13f21e431dad47ac09ae4e2c22a4160eb1e6489a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f16e6ec0_f35813b3",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 11
      },
      "lineNbr": 85,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-09-23T07:15:28Z",
      "side": 1,
      "message": "In PS 14 I proposed solution where future result is executed on channel eventLoop, so all modifications of queue are done on same thread what should eliminate race condition",
      "parentUuid": "6d5038e7_db279e28",
      "revId": "13f21e431dad47ac09ae4e2c22a4160eb1e6489a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}