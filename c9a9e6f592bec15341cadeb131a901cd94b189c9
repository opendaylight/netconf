{
  "comments": [
    {
      "key": {
        "uuid": "66791777_f7980fde",
        "filename": "features/restconf/odl-restconf-nb-rfc8040/pom.xml",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 649
      },
      "writtenOn": "2020-07-07T17:33:50Z",
      "side": 1,
      "message": "this needs an equivalent patch to odlparent, as odl-jersey should be providing everything we need",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1685c4d_10dcf29a",
        "filename": "features/restconf/odl-restconf-nb-rfc8040/pom.xml",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 8737
      },
      "writtenOn": "2020-07-09T14:43:46Z",
      "side": 1,
      "message": "Done- this can be removed because is not needed due to probably not needed to add this to odl-parent",
      "parentUuid": "66791777_f7980fde",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "480f4ff7_9e525b14",
        "filename": "features/restconf/odl-restconf-nb-rfc8040/pom.xml",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 649
      },
      "writtenOn": "2020-07-09T15:31:58Z",
      "side": 1,
      "message": "Okay, in that case let\u0027s remove it",
      "parentUuid": "f1685c4d_10dcf29a",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01e42206_12a29171",
        "filename": "features/restconf/odl-restconf-nb-rfc8040/pom.xml",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 8737
      },
      "writtenOn": "2020-07-09T20:46:59Z",
      "side": 1,
      "message": "in last patch set its removed",
      "parentUuid": "480f4ff7_9e525b14",
      "range": {
        "startLine": 68,
        "startChar": 8,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45628eb2_0463634a",
        "filename": "restconf/restconf-nb-rfc8040/src/main/java/org/opendaylight/restconf/nb/rfc8040/rests/utils/SubscribeToStreamUtil.java",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 649
      },
      "writtenOn": "2020-07-09T15:34:49Z",
      "side": 1,
      "message": "this is a huge antipattern. refactor these things into two implementations and inject proper implementation",
      "range": {
        "startLine": 102,
        "startChar": 12,
        "endLine": 102,
        "endChar": 32
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e784b48_f2e2f3e5",
        "filename": "restconf/restconf-nb-rfc8040/src/main/java/org/opendaylight/restconf/nb/rfc8040/rests/utils/SubscribeToStreamUtil.java",
        "patchSetId": 15
      },
      "lineNbr": 102,
      "author": {
        "id": 8737
      },
      "writtenOn": "2020-07-09T20:46:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45628eb2_0463634a",
      "range": {
        "startLine": 102,
        "startChar": 12,
        "endLine": 102,
        "endChar": 32
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a2f4736_de8afae6",
        "filename": "restconf/restconf-nb-rfc8040/src/main/java/org/opendaylight/restconf/nb/rfc8040/rests/utils/SubscribeToStreamUtil.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 649
      },
      "writtenOn": "2020-07-09T15:34:49Z",
      "side": 1,
      "message": "i.e. here we\u0027d have a base abstract class and two implementations, each providing the appropriate URI",
      "range": {
        "startLine": 124,
        "startChar": 17,
        "endLine": 124,
        "endChar": 65
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d1c16d_7c096280",
        "filename": "restconf/restconf-nb-rfc8040/src/main/java/org/opendaylight/restconf/nb/rfc8040/rests/utils/SubscribeToStreamUtil.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 8737
      },
      "writtenOn": "2020-07-09T20:46:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a2f4736_de8afae6",
      "range": {
        "startLine": 124,
        "startChar": 17,
        "endLine": 124,
        "endChar": 65
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cd1e3f0_8ebf0cd8",
        "filename": "restconf/restconf-nb-rfc8040/src/main/java/org/opendaylight/restconf/nb/rfc8040/rests/utils/SubscribeToStreamUtil.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 649
      },
      "writtenOn": "2020-07-21T10:09:25Z",
      "side": 1,
      "message": "Actually what I meant was turn *this* class into a proper OOP thing, not introduce another indirection.",
      "parentUuid": "c4d1c16d_7c096280",
      "range": {
        "startLine": 124,
        "startChar": 17,
        "endLine": 124,
        "endChar": 65
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8da30b4d_064deefb",
        "filename": "restconf/restconf-nb-rfc8040/src/main/java/org/opendaylight/restconf/nb/rfc8040/rests/utils/SubscribeToStreamUtil.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 8737
      },
      "writtenOn": "2020-07-21T13:11:29Z",
      "side": 1,
      "message": "yes is possible encapsulate this to Configuration and inject it with this but still im hit problem most of call chain is static method\n1) public Response readData(...)\n2) public static NormalizedNode\u003c?, ?\u003e readData(...)\n3) private static void createAllYangNotificationStreams(...)\n4) private static void writeNotificationStreamToDatastore(...)\n\nIdeal way will be remove static for this 3 methods. When i look on call hierarchy all of them is called only through this one chain. Due to still there will be some extra parameter without this change(Configuration, boolean, UrlResolver, ...). Is there any specific reason why this is static? When i go through history looks like all this methods was in ReadDataTransactionUtil but now i think is no reason for static here.",
      "parentUuid": "5cd1e3f0_8ebf0cd8",
      "range": {
        "startLine": 124,
        "startChar": 17,
        "endLine": 124,
        "endChar": 65
      },
      "revId": "c9a9e6f592bec15341cadeb131a901cd94b189c9",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    }
  ]
}