{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0f79a28f_bdcd6bac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7231
      },
      "writtenOn": "2023-06-21T08:53:29Z",
      "side": 1,
      "message": "Just tested this PR. I confirmed that JIRA NETCONF-1051 is resolved on my testbed.\n\nThanks a lot\n\nOlivier",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f54cc1b7_c3d109eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 8144
      },
      "writtenOn": "2023-06-21T11:13:37Z",
      "side": 1,
      "message": "Can you please check tests at https://github.com/search?q\u003drepo%3Aopendaylight%2Fnetconf%20notifi_list_Test\u0026type\u003dcode?\n\nI wonder why existing tests did not catch the issue, maybe this patch deserves one more additional.",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adc448d7_fbcebf8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-06-22T04:26:16Z",
      "side": 1,
      "message": "This is for data change notifications, so ListenerAdapterTest seems to be the right place. Please take a look at the new test cases for list entry.",
      "parentUuid": "f54cc1b7_c3d109eb",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8026b5ec_7b376719",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/AbstractWebsocketSerializer.java",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 8144
      },
      "writtenOn": "2023-06-21T11:13:37Z",
      "side": 1,
      "message": "Have you tries to subscribe to unkeyed lists, too?\nIt means here we get UnkeyedListEntryNode.",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "134378b5_c516ebe0",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/AbstractWebsocketSerializer.java",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-06-22T04:26:16Z",
      "side": 1,
      "message": "Is it possible to target a specific entry in an unkeyed list?\nSince the type of \u0027path\u0027 in \u0027sal-remote:create-data-change-event-subscription\u0027 is instance-identifier, I guess it is possible to use a path targeting an entry in unkeyed list in theory. But it doesn\u0027t look like it\u0027s actually supported.",
      "parentUuid": "8026b5ec_7b376719",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61838cc8_a728f0d5",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/AbstractWebsocketSerializer.java",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-06-22T20:57:55Z",
      "side": 1,
      "message": "Not exactly sure, but it should work via https://www.javadoc.io/doc/org.opendaylight.yangtools/yangtools-docs/latest/org/opendaylight/yangtools/yang/data/codec/xml/XMLStreamNormalizedNodeStreamWriter.html, which takes a YangInstanceIdentifier and hence should do The Right Thing(tm).\n\nThe way I would guess it should work is that either:\n- we specify parent list and then emit the entry, or\n- we specify the entry itself",
      "parentUuid": "134378b5_c516ebe0",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b001d359_3cdf0b32",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/AbstractWebsocketSerializer.java",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-06-22T21:00:40Z",
      "side": 1,
      "message": "https://www.javadoc.io/doc/org.opendaylight.yangtools/yangtools-docs/latest/org/opendaylight/yangtools/yang/data/codec/xml/XMLStreamNormalizedNodeStreamWriter.html#create(javax.xml.stream.XMLStreamWriter,org.opendaylight.yangtools.yang.model.api.EffectiveModelContext,org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier)\n\nis the proper link. The thing with these methods: you really need to uses the closest thing to yang-data-api, but there are other (legacy or weird) avenues.",
      "parentUuid": "61838cc8_a728f0d5",
      "revId": "b4e493784810cbd78f1545eb3aba69f2c8138380",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}