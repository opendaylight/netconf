{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e2fb22a4_a94286da",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/JsonDataTreeCandidateSerializer.java",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-08T22:01:38Z",
      "side": 1,
      "message": "This doesn\u0027t seem to work for `child-nodes-only` when a list is removed.\n\nFor example, when there is a single NETCONF node configured in the `topology-netconf` topology and the node is deleted, hence the whole `node` list is removed from the datastore, a notification like this is generated (the event subscription target path is `/network-topology:network-topology`):\n```\n{\n    \"ietf-restconf:notification\": {\n        \"event-time\": \"2023-09-08T21:45:23.665615291Z\",\n        \"sal-remote:data-changed-notification\": {\n            \"data-change-event\": [\n                {\n                    \"path\": \"/network-topology:network-topology/topology[topology-id\u003d\u0027topology-netconf\u0027]\",\n                    \"operation\": \"deleted\"\n                }\n            ]\n        }\n    }\n}\n```\n\nThe dataPath has `network-topology, topology, topology[topology-id\u003d\u0027topology-netconf\u0027], node` but `node` is lost after it is processed in `scalarValue()`. And the `path` misleadingly points to the `topology-netconf` topology entry.",
      "revId": "78a53ebed6565f4a8ba370fefba6084ff18c9bbb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84969f7b_c7b23772",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/JsonDataTreeCandidateSerializer.java",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-09-10T15:10:13Z",
      "side": 1,
      "message": "Ah, right, so this is even more broken than expected üò≠ ListenerAdapter has to also mind which nodes have their path exactly representable in instance-identifier encoding.",
      "parentUuid": "e2fb22a4_a94286da",
      "revId": "78a53ebed6565f4a8ba370fefba6084ff18c9bbb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d394e76a_0b55bb68",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/JsonDataTreeCandidateSerializer.java",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 649
      },
      "writtenOn": "2023-09-10T15:43:32Z",
      "side": 1,
      "message": "so how does this work with https://git.opendaylight.org/gerrit/c/netconf/+/107783?",
      "parentUuid": "84969f7b_c7b23772",
      "revId": "78a53ebed6565f4a8ba370fefba6084ff18c9bbb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec1e5ca4_5a78dd6f",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/JsonDataTreeCandidateSerializer.java",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-10T22:02:17Z",
      "side": 1,
      "message": "RESTCONF is broken because of duplicate annotations for `postDataJSON()`:\n```\n20:17:31.042 ERROR [qtp1306137091-425] Following issues have been detected:\nWARNING: A resource model has ambiguous (sub-)resource method for HTTP method POST and input mime-types as defined by\"@Consumes\" and \"@Produces\" annotations at Java methods public javax.ws.rs.core.Response org.opendaylight.restconf.nb.rfc8040.rests.services.impl.RestconfDataServiceImpl.postDataJSON(java.io.InputStream,javax.ws.rs.core.UriInfo) and public javax.ws.rs.core.Response org.opendaylight.restconf.nb.rfc8040.rests.services.impl.RestconfDataServiceImpl.postDataJSON(java.lang.String,java.io.InputStream,javax.ws.rs.core.UriInfo) at matching regular expression /data/(.+). These two methods produces and consumes exactly the same mime-types and therefore their invocation as a resource methods will always fail.\n```",
      "parentUuid": "d394e76a_0b55bb68",
      "revId": "78a53ebed6565f4a8ba370fefba6084ff18c9bbb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f889a134_ea69858c",
        "filename": "restconf/restconf-nb/src/main/java/org/opendaylight/restconf/nb/rfc8040/streams/listeners/JsonDataTreeCandidateSerializer.java",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 1927
      },
      "writtenOn": "2023-09-11T00:43:43Z",
      "side": 1,
      "message": "Once the incorrect `Path` of one of the `postDataJSON()` methods is fixed, the patch 107783 seems to work - when the last item is removed the path points to the last item that\u0027s just removed instead of the parent of the list or leaf-list. üëç",
      "parentUuid": "ec1e5ca4_5a78dd6f",
      "revId": "78a53ebed6565f4a8ba370fefba6084ff18c9bbb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}