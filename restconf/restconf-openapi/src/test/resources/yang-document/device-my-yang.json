{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "my-yang",
    "description": "We are providing full API for configurational data which can be edited (by POST, PUT, PATCH and DELETE).\nFor operational data we only provide GET API.\n\nFor majority of request you can see only config data in examples. That's because we can show only one example\nper request. The exception when you can see operational data in example is when data are representing\noperational (config false) container with no config data in it."
  },
  "servers": [
    {
      "url": "http://localhost:8181/"
    }
  ],
  "paths": {
    "/rests/data/nodes/node=123/yang-ext:mount/my-yang:data": {
      "get": {
        "tags": [
          "123 my-yang"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/my-yang_data"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/my-yang_data",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "",
        "summary": "GET - 123 - my-yang - data"
      },
      "put": {
        "tags": [
          "123 my-yang"
        ],
        "parameters": [],
        "requestBody": {
          "description": "data",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/my-yang_data"
              }
            },
            "application/json": {
              "schema": {
                "properties": {
                  "my-yang:data": {
                    "$ref": "#/components/schemas/my-yang_data",
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Updated"
          },
          "201": {
            "description": "Created"
          }
        },
        "description": "",
        "summary": "PUT - my-yang - 123 - data"
      },
      "delete": {
        "tags": [
          "123 my-yang"
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "description": "",
        "summary": "DELETE - 123 - my-yang - data"
      },
      "patch": {
        "tags": [
          "123 my-yang"
        ],
        "parameters": [],
        "requestBody": {
          "description": "data",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "my-yang:data": {
                    "$ref": "#/components/schemas/my-yang_data",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/my-yang_data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "description": "",
        "summary": "PATCH - my-yang - 123 - data"
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount": {
      "post": {
        "tags": [
          "123 my-yang"
        ],
        "parameters": [],
        "requestBody": {
          "description": "data",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/my-yang_data"
              }
            },
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/my-yang_data",
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "demo yang file\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - my-yang - my-yang"
      }
    }
  },
  "components": {
    "schemas": {
      "my-yang_data": {
        "properties": {
          "my-data": {
            "description": "",
            "type": "string",
            "example": "Some my-data"
          }
        },
        "xml": {
          "name": "data",
          "namespace": "urn:opendaylight:params:xml:ns:yang:my-yang"
        },
        "description": "",
        "title": "my-yang_data",
        "type": "object"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}