{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "123 modules of RESTCONF",
    "description": "We are providing full API for configurational data which can be edited (by POST, PUT, PATCH and DELETE).\nFor operational data we only provide GET API.\n\nFor majority of request you can see only config data in examples. That's because we can show only one example\nper request. The exception when you can see operational data in example is when data are representing\noperational (config false) container with no config data in it."
  },
  "servers": [
    {
      "url": "http://localhost:8181/"
    }
  ],
  "paths": {
    "/rests/data/nodes/node=123/yang-ext:mount": {
      "get": {
        "description": "Queries the config (startup) datastore on the mounted hosted.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "GET - 123 - datastore - data",
        "tags": [
          "123 GET root"
        ]
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount": {
      "get": {
        "description": "Queries the available operations (RPC calls) on the mounted hosted.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "GET - 123 - datastore - operations",
        "tags": [
          "123 GET root"
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/action-types:list={name}": {
      "put": {
        "description": "",
        "summary": "PUT - action-types - 123 - list",
        "requestBody": {
          "description": "list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action-types:list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/action-types_list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/action-types_list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 action-types"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - action-types - 123 - list",
        "requestBody": {
          "description": "list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "action-types:list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/action-types_list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/action-types_list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 action-types"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - action-types - list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 action-types"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - action-types - list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/action-types_list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/action-types_list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 action-types"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/action-types:list={name}/list-action": {
      "post": {
        "description": "",
        "summary": "POST - 123 - action-types - list-action",
        "requestBody": {
          "description": "list-action_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/action-types_list_list-action_input",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/action-types_list_list-action_input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "RPC list-action success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action-types_list_list-action_output"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/action-types_list_list-action_output"
                }
              }
            }
          }
        },
        "tags": [
          "123 action-types"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/choice-test:first-container": {
      "put": {
        "description": "",
        "summary": "PUT - choice-test - 123 - first-container",
        "requestBody": {
          "description": "first-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "choice-test:first-container": {
                    "$ref": "#/components/schemas/choice-test_first-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/choice-test_first-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 choice-test"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - choice-test - 123 - first-container",
        "requestBody": {
          "description": "first-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "choice-test:first-container": {
                    "$ref": "#/components/schemas/choice-test_first-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/choice-test_first-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 choice-test"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - choice-test - first-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 choice-test"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - choice-test - first-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/choice-test_first-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "first-container": {
                      "$ref": "#/components/schemas/choice-test_first-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 choice-test"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/definition-test:binary-container": {
      "put": {
        "description": "",
        "summary": "PUT - definition-test - 123 - binary-container",
        "requestBody": {
          "description": "binary-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "definition-test:binary-container": {
                    "$ref": "#/components/schemas/definition-test_binary-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/definition-test_binary-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 definition-test"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - definition-test - 123 - binary-container",
        "requestBody": {
          "description": "binary-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "definition-test:binary-container": {
                    "$ref": "#/components/schemas/definition-test_binary-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/definition-test_binary-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 definition-test"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - definition-test - binary-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 definition-test"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - definition-test - binary-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/definition-test_binary-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "binary-container": {
                      "$ref": "#/components/schemas/definition-test_binary-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 definition-test"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/duplication-test:test-rpc": {
      "post": {
        "description": "",
        "summary": "POST - 123 - duplication-test - test-rpc",
        "requestBody": {
          "description": "test-rpc_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/duplication-test_test-rpc_input",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/duplication-test_test-rpc_input"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC test-rpc success"
          }
        },
        "tags": [
          "123 duplication-test"
        ],
        "parameters": []
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/duplication-test:test-rpc2": {
      "post": {
        "description": "",
        "summary": "POST - 123 - duplication-test - test-rpc2",
        "requestBody": {
          "description": "test-rpc2_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/duplication-test_test-rpc2_input",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/duplication-test_test-rpc2_input"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC test-rpc2 success"
          }
        },
        "tags": [
          "123 duplication-test"
        ],
        "parameters": []
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/mandatory-test:root-container": {
      "post": {
        "description": "\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - mandatory-test - root-container",
        "requestBody": {
          "description": "optional-presence-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "optional-presence-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "put": {
        "description": "",
        "summary": "PUT - mandatory-test - 123 - root-container",
        "requestBody": {
          "description": "root-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mandatory-test:root-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - mandatory-test - 123 - root-container",
        "requestBody": {
          "description": "root-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "mandatory-test:root-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - mandatory-test - root-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - mandatory-test - root-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/mandatory-test_root-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "root-container": {
                      "$ref": "#/components/schemas/mandatory-test_root-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/mandatory-test:root-container/optional-presence-container": {
      "put": {
        "description": "",
        "summary": "PUT - mandatory-test - 123 - optional-presence-container",
        "requestBody": {
          "description": "optional-presence-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mandatory-test:optional-presence-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - mandatory-test - 123 - optional-presence-container",
        "requestBody": {
          "description": "optional-presence-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "mandatory-test:optional-presence-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - mandatory-test - optional-presence-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - mandatory-test - optional-presence-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "optional-presence-container": {
                      "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/mandatory-test:root-container/mandatory-container": {
      "put": {
        "description": "",
        "summary": "PUT - mandatory-test - 123 - mandatory-container",
        "requestBody": {
          "description": "mandatory-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mandatory-test:mandatory-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - mandatory-test - 123 - mandatory-container",
        "requestBody": {
          "description": "mandatory-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "mandatory-test:mandatory-container": {
                    "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - mandatory-test - mandatory-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - mandatory-test - mandatory-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "mandatory-container": {
                      "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/mandatory-test:root-container/optional-list={id}": {
      "put": {
        "description": "",
        "summary": "PUT - mandatory-test - 123 - optional-list",
        "requestBody": {
          "description": "optional-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mandatory-test:optional-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/mandatory-test_root-container_optional-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_optional-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - mandatory-test - 123 - optional-list",
        "requestBody": {
          "description": "optional-list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "mandatory-test:optional-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/mandatory-test_root-container_optional-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_optional-list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - mandatory-test - optional-list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - mandatory-test - optional-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/mandatory-test_root-container_optional-list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "optional-list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/mandatory-test_root-container_optional-list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/mandatory-test:root-container/mandatory-list={id}": {
      "put": {
        "description": "",
        "summary": "PUT - mandatory-test - 123 - mandatory-list",
        "requestBody": {
          "description": "mandatory-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mandatory-test:mandatory-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - mandatory-test - 123 - mandatory-list",
        "requestBody": {
          "description": "mandatory-list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "mandatory-test:mandatory-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - mandatory-test - mandatory-list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - mandatory-test - mandatory-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "mandatory-list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 mandatory-test"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/my-yang:data": {
      "put": {
        "description": "",
        "summary": "PUT - my-yang - 123 - data",
        "requestBody": {
          "description": "data",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "my-yang:data": {
                    "$ref": "#/components/schemas/my-yang_data",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/my-yang_data"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 my-yang"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - my-yang - 123 - data",
        "requestBody": {
          "description": "data",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "my-yang:data": {
                    "$ref": "#/components/schemas/my-yang_data",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/my-yang_data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 my-yang"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - my-yang - data",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 my-yang"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - my-yang - data",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/my-yang_data"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/my-yang_data",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 my-yang"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/path-params-test:cont": {
      "post": {
        "description": "\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - path-params-test - cont",
        "requestBody": {
          "description": "list1",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "list1": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": []
      },
      "put": {
        "description": "",
        "summary": "PUT - path-params-test - 123 - cont",
        "requestBody": {
          "description": "cont",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "path-params-test:cont": {
                    "$ref": "#/components/schemas/path-params-test_cont",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - path-params-test - 123 - cont",
        "requestBody": {
          "description": "cont",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "path-params-test:cont": {
                    "$ref": "#/components/schemas/path-params-test_cont",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - path-params-test - cont",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - path-params-test - cont",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/path-params-test_cont"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "cont": {
                      "$ref": "#/components/schemas/path-params-test_cont",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/path-params-test:cont/list1={name}": {
      "put": {
        "description": "",
        "summary": "PUT - path-params-test - 123 - list1",
        "requestBody": {
          "description": "list1",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "path-params-test:list1": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - path-params-test - 123 - list1",
        "requestBody": {
          "description": "list1",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "path-params-test:list1": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - path-params-test - list1",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - path-params-test - list1",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/path-params-test_cont_list1"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "list1": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/path-params-test_cont_list1",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/path-params-test:cont/list1={name}/list2={name1}": {
      "put": {
        "description": "",
        "summary": "PUT - path-params-test - 123 - list2",
        "requestBody": {
          "description": "list2",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "path-params-test:list2": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1_list2",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1_list2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - path-params-test - 123 - list2",
        "requestBody": {
          "description": "list2",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "path-params-test:list2": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1_list2",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1_list2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - path-params-test - list2",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - path-params-test - list2",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/path-params-test_cont_list1_list2"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "list2": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/path-params-test_cont_list1_list2",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/path-params-test:cont/list1={name}/cont2": {
      "put": {
        "description": "",
        "summary": "PUT - path-params-test - 123 - cont2",
        "requestBody": {
          "description": "cont2",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "path-params-test:cont2": {
                    "$ref": "#/components/schemas/path-params-test_cont_list1_cont2",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1_cont2"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - path-params-test - 123 - cont2",
        "requestBody": {
          "description": "cont2",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "path-params-test:cont2": {
                    "$ref": "#/components/schemas/path-params-test_cont_list1_cont2",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1_cont2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - path-params-test - cont2",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - path-params-test - cont2",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/path-params-test_cont_list1_cont2"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "cont2": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1_cont2",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/path-params-test:cont/list1={name}/list4={name1}": {
      "put": {
        "description": "",
        "summary": "PUT - path-params-test - 123 - list4",
        "requestBody": {
          "description": "list4",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "path-params-test:list4": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1_list4",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1_list4"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - path-params-test - 123 - list4",
        "requestBody": {
          "description": "list4",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "path-params-test:list4": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list1_list4",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list1_list4"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - path-params-test - list4",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - path-params-test - list4",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/path-params-test_cont_list1_list4"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "list4": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/path-params-test_cont_list1_list4",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/path-params-test:cont/list3={name}": {
      "put": {
        "description": "",
        "summary": "PUT - path-params-test - 123 - list3",
        "requestBody": {
          "description": "list3",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "path-params-test:list3": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list3",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list3"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - path-params-test - 123 - list3",
        "requestBody": {
          "description": "list3",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "path-params-test:list3": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/path-params-test_cont_list3",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/path-params-test_cont_list3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - path-params-test - list3",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - path-params-test - list3",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/path-params-test_cont_list3"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "list3": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/path-params-test_cont_list3",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 path-params-test"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/recursive:container-root": {
      "post": {
        "description": "\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - recursive - container-root",
        "requestBody": {
          "description": "root-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "root-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": []
      },
      "put": {
        "description": "",
        "summary": "PUT - recursive - 123 - container-root",
        "requestBody": {
          "description": "container-root",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "recursive:container-root": {
                    "$ref": "#/components/schemas/recursive_container-root",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - recursive - 123 - container-root",
        "requestBody": {
          "description": "container-root",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "recursive:container-root": {
                    "$ref": "#/components/schemas/recursive_container-root",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - recursive - container-root",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - recursive - container-root",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/recursive_container-root"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "container-root": {
                      "$ref": "#/components/schemas/recursive_container-root",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/recursive:container-root/root-list={name}": {
      "put": {
        "description": "",
        "summary": "PUT - recursive - 123 - root-list",
        "requestBody": {
          "description": "root-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "recursive:root-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - recursive - 123 - root-list",
        "requestBody": {
          "description": "root-list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "recursive:root-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - recursive - root-list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - recursive - root-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/recursive_container-root_root-list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "root-list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recursive_container-root_root-list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/recursive:container-root/root-list={name}/nested-list={name1}": {
      "put": {
        "description": "",
        "summary": "PUT - recursive - 123 - nested-list",
        "requestBody": {
          "description": "nested-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "recursive:nested-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - recursive - 123 - nested-list",
        "requestBody": {
          "description": "nested-list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "recursive:nested-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - recursive - nested-list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - recursive - nested-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "nested-list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/recursive:container-root/root-list={name}/nested-list={name1}/super-nested-list={name2}": {
      "put": {
        "description": "",
        "summary": "PUT - recursive - 123 - super-nested-list",
        "requestBody": {
          "description": "super-nested-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "recursive:super-nested-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - recursive - 123 - super-nested-list",
        "requestBody": {
          "description": "super-nested-list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "recursive:super-nested-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - recursive - super-nested-list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - recursive - super-nested-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "super-nested-list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 recursive"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/string-types:test": {
      "put": {
        "description": "Tests various combinations of regex expressions found in snmp yang models,\nwhich are causing problems because of isBasicLatin expression.\n\nAccording to https://unicode.org/charts/PDF/U0000.pdf basic latin characters are in range\n0x00-0x7F ([\\x00-\\xFF] or [\\u0000-\\u00FF]). This means it should be safe to replace isBasicLatin\nin regex expressions for characters in this range.",
        "summary": "PUT - string-types - 123 - test",
        "requestBody": {
          "description": "test",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "string-types:test": {
                    "$ref": "#/components/schemas/string-types_test",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/string-types_test"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 string-types"
        ],
        "parameters": []
      },
      "patch": {
        "description": "Tests various combinations of regex expressions found in snmp yang models,\nwhich are causing problems because of isBasicLatin expression.\n\nAccording to https://unicode.org/charts/PDF/U0000.pdf basic latin characters are in range\n0x00-0x7F ([\\x00-\\xFF] or [\\u0000-\\u00FF]). This means it should be safe to replace isBasicLatin\nin regex expressions for characters in this range.",
        "summary": "PATCH - string-types - 123 - test",
        "requestBody": {
          "description": "test",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "string-types:test": {
                    "$ref": "#/components/schemas/string-types_test",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/string-types_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 string-types"
        ],
        "parameters": []
      },
      "delete": {
        "description": "Tests various combinations of regex expressions found in snmp yang models,\nwhich are causing problems because of isBasicLatin expression.\n\nAccording to https://unicode.org/charts/PDF/U0000.pdf basic latin characters are in range\n0x00-0x7F ([\\x00-\\xFF] or [\\u0000-\\u00FF]). This means it should be safe to replace isBasicLatin\nin regex expressions for characters in this range.",
        "summary": "DELETE - 123 - string-types - test",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 string-types"
        ],
        "parameters": []
      },
      "get": {
        "description": "Tests various combinations of regex expressions found in snmp yang models,\nwhich are causing problems because of isBasicLatin expression.\n\nAccording to https://unicode.org/charts/PDF/U0000.pdf basic latin characters are in range\n0x00-0x7F ([\\x00-\\xFF] or [\\u0000-\\u00FF]). This means it should be safe to replace isBasicLatin\nin regex expressions for characters in this range.",
        "summary": "GET - 123 - string-types - test",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/string-types_test"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "test": {
                      "$ref": "#/components/schemas/string-types_test",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 string-types"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/strings-from-regex:test": {
      "put": {
        "description": "",
        "summary": "PUT - strings-from-regex - 123 - test",
        "requestBody": {
          "description": "test",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "strings-from-regex:test": {
                    "$ref": "#/components/schemas/strings-from-regex_test",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/strings-from-regex_test"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 strings-from-regex"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - strings-from-regex - 123 - test",
        "requestBody": {
          "description": "test",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "strings-from-regex:test": {
                    "$ref": "#/components/schemas/strings-from-regex_test",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/strings-from-regex_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 strings-from-regex"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - strings-from-regex - test",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 strings-from-regex"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - strings-from-regex - test",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/strings-from-regex_test"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "test": {
                      "$ref": "#/components/schemas/strings-from-regex_test",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 strings-from-regex"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/test-container-childs:root-container": {
      "post": {
        "description": "\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - test-container-childs - root-container",
        "requestBody": {
          "description": "nested-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "nested-container": {
                    "$ref": "#/components/schemas/test-container-childs_root-container_nested-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container_nested-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "put": {
        "description": "",
        "summary": "PUT - test-container-childs - 123 - root-container",
        "requestBody": {
          "description": "root-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "test-container-childs:root-container": {
                    "$ref": "#/components/schemas/test-container-childs_root-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - test-container-childs - 123 - root-container",
        "requestBody": {
          "description": "root-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "test-container-childs:root-container": {
                    "$ref": "#/components/schemas/test-container-childs_root-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - test-container-childs - root-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - test-container-childs - root-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/test-container-childs_root-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "root-container": {
                      "$ref": "#/components/schemas/test-container-childs_root-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/test-container-childs:root-container/nested-container": {
      "post": {
        "description": "\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - test-container-childs - nested-container",
        "requestBody": {
          "description": "mandatory-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mandatory-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "put": {
        "description": "",
        "summary": "PUT - test-container-childs - 123 - nested-container",
        "requestBody": {
          "description": "nested-container",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "test-container-childs:nested-container": {
                    "$ref": "#/components/schemas/test-container-childs_root-container_nested-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container_nested-container"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - test-container-childs - 123 - nested-container",
        "requestBody": {
          "description": "nested-container",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "test-container-childs:nested-container": {
                    "$ref": "#/components/schemas/test-container-childs_root-container_nested-container",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container_nested-container"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - test-container-childs - nested-container",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - test-container-childs - nested-container",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/test-container-childs_root-container_nested-container"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "nested-container": {
                      "$ref": "#/components/schemas/test-container-childs_root-container_nested-container",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/test-container-childs:root-container/nested-container/mandatory-list={id}": {
      "put": {
        "description": "",
        "summary": "PUT - test-container-childs - 123 - mandatory-list",
        "requestBody": {
          "description": "mandatory-list",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "test-container-childs:mandatory-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - test-container-childs - 123 - mandatory-list",
        "requestBody": {
          "description": "mandatory-list",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "test-container-childs:mandatory-list": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - test-container-childs - mandatory-list",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - test-container-childs - mandatory-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "mandatory-list": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 test-container-childs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/toaster:make-toast": {
      "post": {
        "description": "Make some toast.\n  The toastDone notification will be sent when\n  the toast is finished.\n  An 'in-use' error will be returned if toast\n  is already being made.\n  A 'resource-denied' error will be returned\n  if the toaster service is disabled.",
        "summary": "POST - 123 - toaster - make-toast",
        "requestBody": {
          "description": "make-toast_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/toaster_make-toast_input",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster_make-toast_input"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC make-toast success"
          }
        },
        "tags": [
          "123 toaster"
        ],
        "parameters": []
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/toaster:cancel-toast": {
      "post": {
        "description": "Stop making toast, if any is being made.\n  A 'resource-denied' error will be returned\n  if the toaster service is disabled.",
        "summary": "POST - 123 - toaster - cancel-toast",
        "requestBody": {
          "description": "cancel-toast_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "application/xml": {
              "schema": {
                "xml": {
                  "name": "input",
                  "namespace": "http://netconfcentral.org/ns/toaster"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC cancel-toast success"
          }
        },
        "tags": [
          "123 toaster"
        ],
        "parameters": []
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/toaster2:make-toast": {
      "post": {
        "description": "Make some toast.\n  The toastDone notification will be sent when\n  the toast is finished.\n  An 'in-use' error will be returned if toast\n  is already being made.\n  A 'resource-denied' error will be returned\n  if the toaster service is disabled.",
        "summary": "POST - 123 - toaster2 - make-toast",
        "requestBody": {
          "description": "make-toast_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/toaster2_make-toast_input",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_make-toast_input"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC make-toast success"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/toaster2:cancel-toast": {
      "post": {
        "description": "Stop making toast, if any is being made.\n  A 'resource-denied' error will be returned\n  if the toaster service is disabled.",
        "summary": "POST - 123 - toaster2 - cancel-toast",
        "requestBody": {
          "description": "cancel-toast_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "application/xml": {
              "schema": {
                "xml": {
                  "name": "input",
                  "namespace": "http://netconfcentral.org/ns/toaster2"
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC cancel-toast success"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      }
    },
    "/rests/operations/nodes/node=123/yang-ext:mount/toaster2:restock-toaster": {
      "post": {
        "description": "Restocks the toaster with the amount of bread specified.",
        "summary": "POST - 123 - toaster2 - restock-toaster",
        "requestBody": {
          "description": "restock-toaster_input",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "input": {
                    "$ref": "#/components/schemas/toaster2_restock-toaster_input",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_restock-toaster_input"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "RPC restock-toaster success"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/toaster2:toaster": {
      "post": {
        "description": "Top-level container for all toaster database objects.\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - toaster2 - toaster",
        "requestBody": {
          "description": "toasterSlot",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "toasterSlot": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/toaster2_toaster_toasterSlot",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster_toasterSlot"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      },
      "put": {
        "description": "Top-level container for all toaster database objects.",
        "summary": "PUT - toaster2 - 123 - toaster",
        "requestBody": {
          "description": "toaster",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "toaster2:toaster": {
                    "$ref": "#/components/schemas/toaster2_toaster",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      },
      "patch": {
        "description": "Top-level container for all toaster database objects.",
        "summary": "PATCH - toaster2 - 123 - toaster",
        "requestBody": {
          "description": "toaster",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "toaster2:toaster": {
                    "$ref": "#/components/schemas/toaster2_toaster",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      },
      "delete": {
        "description": "Top-level container for all toaster database objects.",
        "summary": "DELETE - 123 - toaster2 - toaster",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": []
      },
      "get": {
        "description": "Top-level container for all toaster database objects.",
        "summary": "GET - 123 - toaster2 - toaster",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/toaster2_toaster"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "toaster": {
                      "$ref": "#/components/schemas/toaster2_toaster",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/toaster2:toaster/toasterSlot={slotId}": {
      "put": {
        "description": "",
        "summary": "PUT - toaster2 - 123 - toasterSlot",
        "requestBody": {
          "description": "toasterSlot",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "toaster2:toasterSlot": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/toaster2_toaster_toasterSlot",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster_toasterSlot"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - toaster2 - 123 - toasterSlot",
        "requestBody": {
          "description": "toasterSlot",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "toaster2:toasterSlot": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/toaster2_toaster_toasterSlot",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster_toasterSlot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - toaster2 - toasterSlot",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - toaster2 - toasterSlot",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/toaster2_toaster_toasterSlot"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "toasterSlot": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/toaster2_toaster_toasterSlot",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/toaster2:toaster/toasterSlot={slotId}/toaster-augmented:slotInfo": {
      "put": {
        "description": "",
        "summary": "PUT - toaster2 - 123 - slotInfo",
        "requestBody": {
          "description": "slotInfo",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "toaster-augmented:slotInfo": {
                    "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - toaster2 - 123 - slotInfo",
        "requestBody": {
          "description": "slotInfo",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "toaster-augmented:slotInfo": {
                    "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - toaster2 - slotInfo",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - toaster2 - slotInfo",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "slotInfo": {
                      "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 toaster2"
        ],
        "parameters": [
          {
            "name": "slotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed": {
      "post": {
        "description": "\n\nNote:\nIn example payload, you can see only the first data node child of the resource to be created, following the\nguidelines of RFC 8040, which allows us to create only one resource in POST request.\n",
        "summary": "POST - 123 - typed-params - typed",
        "requestBody": {
          "description": "string",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "string": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_string",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": []
      },
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - typed",
        "requestBody": {
          "description": "typed",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:typed": {
                    "$ref": "#/components/schemas/typed-params_typed",
                    "type": "object"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": []
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - typed",
        "requestBody": {
          "description": "typed",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:typed": {
                    "$ref": "#/components/schemas/typed-params_typed",
                    "type": "object"
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": []
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - typed",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": []
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - typed",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "typed": {
                      "$ref": "#/components/schemas/typed-params_typed",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/string={string-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - string",
        "requestBody": {
          "description": "string",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:string": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_string",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "string-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - string",
        "requestBody": {
          "description": "string",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:string": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_string",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "string-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - string",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "string-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - string",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_string"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "string": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_string",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "string-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/binary={binary-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - binary",
        "requestBody": {
          "description": "binary",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:binary": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_binary",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_binary"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "binary-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - binary",
        "requestBody": {
          "description": "binary",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:binary": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_binary",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "binary-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - binary",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "binary-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - binary",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_binary"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "binary": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_binary",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "binary-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/bits={bits-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - bits",
        "requestBody": {
          "description": "bits",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:bits": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_bits",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_bits"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "bits-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - bits",
        "requestBody": {
          "description": "bits",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:bits": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_bits",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_bits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "bits-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - bits",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "bits-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - bits",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_bits"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "bits": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_bits",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "bits-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/boolean={boolean-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - boolean",
        "requestBody": {
          "description": "boolean",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:boolean": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_boolean",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_boolean"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "boolean-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - boolean",
        "requestBody": {
          "description": "boolean",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:boolean": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_boolean",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_boolean"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "boolean-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - boolean",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "boolean-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - boolean",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_boolean"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "boolean": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_boolean",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "boolean-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/empty={empty-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - empty",
        "requestBody": {
          "description": "empty",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:empty": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_empty",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_empty"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "empty-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - empty",
        "requestBody": {
          "description": "empty",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:empty": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_empty",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_empty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "empty-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - empty",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "empty-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - empty",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_empty"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "empty": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_empty",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "empty-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/enumeration={enumeration-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - enumeration",
        "requestBody": {
          "description": "enumeration",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:enumeration": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_enumeration",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_enumeration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "enumeration-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - enumeration",
        "requestBody": {
          "description": "enumeration",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:enumeration": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_enumeration",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_enumeration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "enumeration-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - enumeration",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "enumeration-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - enumeration",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_enumeration"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "enumeration": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_enumeration",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "enumeration-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/instance-identifier={instance-identifier-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - instance-identifier",
        "requestBody": {
          "description": "instance-identifier",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:instance-identifier": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_instance-identifier",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_instance-identifier"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "instance-identifier-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - instance-identifier",
        "requestBody": {
          "description": "instance-identifier",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:instance-identifier": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_instance-identifier",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_instance-identifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "instance-identifier-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - instance-identifier",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "instance-identifier-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - instance-identifier",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_instance-identifier"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "instance-identifier": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_instance-identifier",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "instance-identifier-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/int8={int8-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - int8",
        "requestBody": {
          "description": "int8",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:int8": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int8",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int8"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - int8",
        "requestBody": {
          "description": "int8",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:int8": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int8",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int8"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - int8",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - int8",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_int8"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "int8": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_int8",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/int16={int16-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - int16",
        "requestBody": {
          "description": "int16",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:int16": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int16",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int16"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - int16",
        "requestBody": {
          "description": "int16",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:int16": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int16",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int16"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - int16",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - int16",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_int16"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "int16": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_int16",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/int32={int32-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - int32",
        "requestBody": {
          "description": "int32",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:int32": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int32",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int32"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - int32",
        "requestBody": {
          "description": "int32",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:int32": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int32",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - int32",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - int32",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_int32"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "int32": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_int32",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/int64={int64-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - int64",
        "requestBody": {
          "description": "int64",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:int64": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int64",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int64"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - int64",
        "requestBody": {
          "description": "int64",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:int64": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_int64",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_int64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - int64",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - int64",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_int64"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "int64": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_int64",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "int64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/uint8={uint8-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - uint8",
        "requestBody": {
          "description": "uint8",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:uint8": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint8",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint8"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - uint8",
        "requestBody": {
          "description": "uint8",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:uint8": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint8",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint8"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - uint8",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - uint8",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_uint8"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "uint8": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_uint8",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint8-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/uint16={uint16-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - uint16",
        "requestBody": {
          "description": "uint16",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:uint16": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint16",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint16"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - uint16",
        "requestBody": {
          "description": "uint16",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:uint16": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint16",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint16"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - uint16",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - uint16",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_uint16"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "uint16": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_uint16",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint16-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/uint32={uint32-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - uint32",
        "requestBody": {
          "description": "uint32",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:uint32": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint32",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint32"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - uint32",
        "requestBody": {
          "description": "uint32",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:uint32": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint32",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint32"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - uint32",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - uint32",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_uint32"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "uint32": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_uint32",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint32-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/uint64={uint64-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - uint64",
        "requestBody": {
          "description": "uint64",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:uint64": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint64",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint64"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - uint64",
        "requestBody": {
          "description": "uint64",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:uint64": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_uint64",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_uint64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - uint64",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - uint64",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_uint64"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "uint64": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_uint64",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "uint64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/decimal64={decimal64-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - decimal64",
        "requestBody": {
          "description": "decimal64",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:decimal64": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_decimal64",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_decimal64"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "decimal64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - decimal64",
        "requestBody": {
          "description": "decimal64",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:decimal64": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_decimal64",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_decimal64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "decimal64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - decimal64",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "decimal64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - decimal64",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_decimal64"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "decimal64": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_decimal64",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "decimal64-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    },
    "/rests/data/nodes/node=123/yang-ext:mount/typed-params:typed/union={union-key}": {
      "put": {
        "description": "",
        "summary": "PUT - typed-params - 123 - union",
        "requestBody": {
          "description": "union",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typed-params:union": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_union",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_union"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "union-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "PATCH - typed-params - 123 - union",
        "requestBody": {
          "description": "union",
          "content": {
            "application/yang-data+json": {
              "schema": {
                "properties": {
                  "typed-params:union": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/typed-params_typed_union",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "application/yang-data+xml": {
              "schema": {
                "$ref": "#/components/schemas/typed-params_typed_union"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Updated"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "union-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "DELETE - 123 - typed-params - union",
        "responses": {
          "204": {
            "description": "Deleted"
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "union-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "",
        "summary": "GET - 123 - typed-params - union",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/typed-params_typed_union"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "union": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/typed-params_typed_union",
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "123 typed-params"
        ],
        "parameters": [
          {
            "name": "union-key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "content",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "config",
                "nonconfig",
                "all"
              ],
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "action-types_list": {
        "title": "action-types_list",
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "list",
          "namespace": "urn:ietf:params:xml:ns:yang:test:action:types"
        }
      },
      "action-types_list_list-action_input": {
        "title": "action-types_list_list-action_input",
        "type": "object",
        "properties": {
          "la-input": {
            "description": "",
            "type": "string",
            "example": "Some la-input"
          }
        },
        "required": [
          "la-input"
        ],
        "xml": {
          "name": "input",
          "namespace": "urn:ietf:params:xml:ns:yang:test:action:types"
        }
      },
      "action-types_list_list-action_output": {
        "title": "action-types_list_list-action_output",
        "type": "object",
        "properties": {
          "la-output": {
            "description": "",
            "type": "string",
            "example": "Some la-output"
          }
        },
        "required": [
          "la-output"
        ],
        "xml": {
          "name": "output",
          "namespace": "urn:ietf:params:xml:ns:yang:test:action:types"
        }
      },
      "choice-test_first-container": {
        "title": "choice-test_first-container",
        "type": "object",
        "properties": {
          "leaf-default": {
            "description": "",
            "type": "string",
            "default": "default-value",
            "example": "Some leaf-default"
          }
        },
        "xml": {
          "name": "first-container",
          "namespace": "urn:opendaylight:choice-test"
        }
      },
      "definition-test_binary-container": {
        "title": "definition-test_binary-container",
        "type": "object",
        "properties": {
          "binary-data": {
            "description": "",
            "type": "string",
            "format": "byte",
            "default": "SGVsbG8gdGVzdCE="
          }
        },
        "xml": {
          "name": "binary-container",
          "namespace": "urn:definition-test"
        }
      },
      "duplication-test_test-rpc_input": {
        "title": "duplication-test_test-rpc_input",
        "type": "object",
        "properties": {
          "input-leaf": {
            "description": "",
            "type": "string",
            "example": "Some input-leaf"
          },
          "first": {
            "$ref": "#/components/schemas/duplication-test_first"
          }
        },
        "xml": {
          "name": "input",
          "namespace": "urn:ietf:params:xml:ns:yang:test:duplication:test"
        }
      },
      "duplication-test_first": {
        "title": "duplication-test_first",
        "type": "object",
        "properties": {},
        "xml": {
          "name": "first",
          "namespace": "urn:ietf:params:xml:ns:yang:test:duplication:service"
        }
      },
      "duplication-test_test-rpc2_input": {
        "title": "duplication-test_test-rpc2_input",
        "type": "object",
        "properties": {
          "input-leaf": {
            "description": "",
            "type": "string",
            "example": "Some input-leaf"
          },
          "first": {
            "$ref": "#/components/schemas/duplication-test_first"
          }
        },
        "xml": {
          "name": "input",
          "namespace": "urn:ietf:params:xml:ns:yang:test:duplication:test"
        }
      },
      "mandatory-test_root-container": {
        "title": "mandatory-test_root-container",
        "type": "object",
        "properties": {
          "optional-list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/mandatory-test_root-container_optional-list"
            },
            "description": ""
          },
          "mandatory-container": {
            "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-container"
          },
          "mandatory-list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/mandatory-test_root-container_mandatory-list"
            },
            "description": "",
            "example": [
              {
                "id": 0,
                "mandatory-list-field": "Some mandatory-list-field"
              },
              {
                "id": 1,
                "mandatory-list-field": "Some mandatory-list-field"
              }
            ],
            "minItems": 2
          },
          "optional-first-choice": {
            "description": "",
            "type": "string",
            "example": "Some optional-first-choice"
          },
          "mandatory-first-choice": {
            "description": "",
            "type": "string",
            "example": "Some mandatory-first-choice"
          },
          "mandatory-root-leaf": {
            "description": "",
            "type": "string",
            "example": "Some mandatory-root-leaf"
          },
          "optional-presence-container": {
            "$ref": "#/components/schemas/mandatory-test_root-container_optional-presence-container"
          },
          "optional-root-leaf": {
            "description": "",
            "type": "string",
            "example": "Some optional-root-leaf"
          }
        },
        "required": [
          "mandatory-container",
          "mandatory-list",
          "mandatory-first-choice",
          "mandatory-root-leaf"
        ],
        "xml": {
          "name": "root-container",
          "namespace": "http://example.com/test"
        }
      },
      "mandatory-test_root-container_optional-presence-container": {
        "title": "mandatory-test_root-container_optional-presence-container",
        "type": "object",
        "properties": {
          "presence-leaf": {
            "description": "",
            "type": "string",
            "example": "Some presence-leaf"
          }
        },
        "xml": {
          "name": "optional-presence-container",
          "namespace": "http://example.com/test"
        }
      },
      "mandatory-test_root-container_mandatory-container": {
        "title": "mandatory-test_root-container_mandatory-container",
        "type": "object",
        "properties": {
          "leaf-list-with-min-elements": {
            "type": "array",
            "minItems": 2,
            "items": {
              "type": "string",
              "example": "Some leaf-list-with-min-elements"
            },
            "description": "",
            "example": [
              "Some leaf-list-with-min-elements",
              "Some leaf-list-with-min-elements"
            ]
          },
          "mandatory-leaf": {
            "description": "",
            "type": "string",
            "example": "Some mandatory-leaf"
          }
        },
        "required": [
          "leaf-list-with-min-elements",
          "mandatory-leaf"
        ],
        "xml": {
          "name": "mandatory-container",
          "namespace": "http://example.com/test"
        }
      },
      "mandatory-test_root-container_optional-list": {
        "title": "mandatory-test_root-container_optional-list",
        "type": "object",
        "properties": {
          "optional-list-field": {
            "description": "",
            "type": "string",
            "example": "Some optional-list-field"
          },
          "id": {
            "description": "",
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        },
        "xml": {
          "name": "optional-list",
          "namespace": "http://example.com/test"
        }
      },
      "mandatory-test_root-container_mandatory-list": {
        "title": "mandatory-test_root-container_mandatory-list",
        "type": "object",
        "properties": {
          "id": {
            "description": "",
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "mandatory-list-field": {
            "description": "",
            "type": "string",
            "example": "Some mandatory-list-field"
          }
        },
        "required": [
          "mandatory-list-field"
        ],
        "xml": {
          "name": "mandatory-list",
          "namespace": "http://example.com/test"
        }
      },
      "my-yang_data": {
        "title": "my-yang_data",
        "type": "object",
        "properties": {
          "my-data": {
            "description": "",
            "type": "string",
            "example": "Some my-data"
          }
        },
        "xml": {
          "name": "data",
          "namespace": "urn:opendaylight:params:xml:ns:yang:my-yang"
        }
      },
      "path-params-test_cont": {
        "title": "path-params-test_cont",
        "type": "object",
        "properties": {
          "list1": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/path-params-test_cont_list1"
            },
            "description": ""
          },
          "list3": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/path-params-test_cont_list3"
            },
            "description": ""
          }
        },
        "xml": {
          "name": "cont",
          "namespace": "urn:ietf:params:xml:ns:yang:test:params"
        }
      },
      "path-params-test_cont_list1": {
        "title": "path-params-test_cont_list1",
        "type": "object",
        "properties": {
          "list4": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/path-params-test_cont_list1_list4"
            },
            "description": ""
          },
          "list2": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/path-params-test_cont_list1_list2"
            },
            "description": ""
          },
          "cont2": {
            "$ref": "#/components/schemas/path-params-test_cont_list1_cont2"
          },
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "list1",
          "namespace": "urn:ietf:params:xml:ns:yang:test:params"
        }
      },
      "path-params-test_cont_list1_list2": {
        "title": "path-params-test_cont_list1_list2",
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "list2",
          "namespace": "urn:ietf:params:xml:ns:yang:test:params"
        }
      },
      "path-params-test_cont_list1_cont2": {
        "title": "path-params-test_cont_list1_cont2",
        "type": "object",
        "properties": {},
        "xml": {
          "name": "cont2",
          "namespace": "urn:ietf:params:xml:ns:yang:test:params"
        }
      },
      "path-params-test_cont_list1_list4": {
        "title": "path-params-test_cont_list1_list4",
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "list4",
          "namespace": "urn:ietf:params:xml:ns:yang:test:params"
        }
      },
      "path-params-test_cont_list3": {
        "title": "path-params-test_cont_list3",
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "list3",
          "namespace": "urn:ietf:params:xml:ns:yang:test:params"
        }
      },
      "recursive_container-root": {
        "title": "recursive_container-root",
        "type": "object",
        "properties": {
          "root-list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recursive_container-root_root-list"
            },
            "description": ""
          }
        },
        "xml": {
          "name": "container-root",
          "namespace": "urn:opendaylight:test:recursive"
        }
      },
      "recursive_container-root_root-list": {
        "title": "recursive_container-root_root-list",
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          },
          "nested-list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list"
            },
            "description": ""
          }
        },
        "xml": {
          "name": "root-list",
          "namespace": "urn:opendaylight:test:recursive"
        }
      },
      "recursive_container-root_root-list_nested-list": {
        "title": "recursive_container-root_root-list_nested-list",
        "type": "object",
        "properties": {
          "super-nested-list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/recursive_container-root_root-list_nested-list_super-nested-list"
            },
            "description": ""
          },
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "nested-list",
          "namespace": "urn:opendaylight:test:recursive"
        }
      },
      "recursive_container-root_root-list_nested-list_super-nested-list": {
        "title": "recursive_container-root_root-list_nested-list_super-nested-list",
        "type": "object",
        "properties": {
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          }
        },
        "xml": {
          "name": "super-nested-list",
          "namespace": "urn:opendaylight:test:recursive"
        }
      },
      "string-types_test": {
        "title": "string-types_test",
        "type": "object",
        "description": "Tests various combinations of regex expressions found in snmp yang models,\nwhich are causing problems because of isBasicLatin expression.\n\nAccording to https://unicode.org/charts/PDF/U0000.pdf basic latin characters are in range\n0x00-0x7F ([\\x00-\\xFF] or [\\u0000-\\u00FF]). This means it should be safe to replace isBasicLatin\nin regex expressions for characters in this range.",
        "properties": {
          "mac-address": {
            "description": "",
            "type": "string",
            "example": "00:",
            "minLength": 6,
            "maxLength": 6
          },
          "braille-patterns": {
            "description": "",
            "type": "string",
            "example": "",
            "minLength": 10,
            "maxLength": 10
          },
          "date-and-time": {
            "description": "",
            "type": "string",
            "example": "",
            "minLength": 8,
            "maxLength": 11
          },
          "phys-address": {
            "description": "",
            "type": "string",
            "example": "00:",
            "minLength": 0,
            "maxLength": 2147483647
          },
          "arrows": {
            "description": "",
            "type": "string",
            "example": "",
            "minLength": 10,
            "maxLength": 10
          },
          "thai": {
            "description": "",
            "type": "string",
            "example": "",
            "minLength": 10,
            "maxLength": 10
          },
          "display-string": {
            "description": "",
            "type": "string",
            "example": "",
            "minLength": 0,
            "maxLength": 255
          },
          "mathematical-operators": {
            "description": "",
            "type": "string",
            "example": "",
            "minLength": 10,
            "maxLength": 10
          }
        },
        "xml": {
          "name": "test",
          "namespace": "urn:ietf:params:xml:ns:yang:test:string:types"
        }
      },
      "strings-from-regex_test": {
        "title": "strings-from-regex_test",
        "type": "object",
        "properties": {
          "mac-address": {
            "description": "",
            "type": "string",
            "example": "00:00:00:00:00:00",
            "minLength": 0,
            "maxLength": 2147483647
          },
          "ipv4-address": {
            "description": "",
            "type": "string",
            "example": "0.0.0.0",
            "minLength": 0,
            "maxLength": 2147483647
          },
          "login-date-time": {
            "description": "",
            "type": "string",
            "example": "0000-00-00T00:00:00Z",
            "minLength": 0,
            "maxLength": 2147483647
          }
        },
        "xml": {
          "name": "test",
          "namespace": "urn:ietf:params:xml:ns:yang:strings:regex"
        }
      },
      "test-container-childs_root-container": {
        "title": "test-container-childs_root-container",
        "type": "object",
        "properties": {
          "nested-container": {
            "$ref": "#/components/schemas/test-container-childs_root-container_nested-container"
          }
        },
        "xml": {
          "name": "root-container",
          "namespace": "http://example.com/test/container/child"
        }
      },
      "test-container-childs_root-container_nested-container": {
        "title": "test-container-childs_root-container_nested-container",
        "type": "object",
        "properties": {
          "mandatory-list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/test-container-childs_root-container_nested-container_mandatory-list"
            },
            "description": "",
            "example": [
              {
                "address": "Some address",
                "name": "Some name",
                "id": 0
              },
              {
                "address": "Some address",
                "name": "Some name",
                "id": 1
              },
              {
                "address": "Some address",
                "name": "Some name",
                "id": 2
              }
            ],
            "minItems": 3,
            "maxItems": 5
          }
        },
        "required": [
          "mandatory-list"
        ],
        "xml": {
          "name": "nested-container",
          "namespace": "http://example.com/test/container/child"
        }
      },
      "test-container-childs_root-container_nested-container_mandatory-list": {
        "title": "test-container-childs_root-container_nested-container_mandatory-list",
        "type": "object",
        "properties": {
          "address": {
            "description": "",
            "type": "string",
            "example": "Some address"
          },
          "name": {
            "description": "",
            "type": "string",
            "example": "Some name"
          },
          "id": {
            "description": "",
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        },
        "xml": {
          "name": "mandatory-list",
          "namespace": "http://example.com/test/container/child"
        }
      },
      "toaster_make-toast_input": {
        "title": "toaster_make-toast_input",
        "type": "object",
        "properties": {
          "toasterDoneness": {
            "description": "This variable controls how well-done is the\n      ensuing toast. It should be on a scale of 1 to 10.\n      Toast made at 10 generally is considered unfit\n      for human consumption; toast made at 1 is warmed\n      lightly.",
            "type": "integer",
            "format": "int64",
            "default": 5,
            "example": 1
          },
          "toasterToastType": {
            "description": "This variable informs the toaster of the type of\n      material that is being toasted. The toaster\n      uses this information, combined with\n      toasterDoneness, to compute for how\n      long the material must be toasted to achieve\n      the required doneness.",
            "type": "string",
            "enum": [
              "toast-type",
              "white-bread",
              "wonder-bread",
              "frozen-bagel",
              "hash-brown",
              "frozen-waffle",
              "wheat-bread"
            ],
            "default": "wheat-bread",
            "example": "toast-type"
          }
        },
        "xml": {
          "name": "input",
          "namespace": "http://netconfcentral.org/ns/toaster"
        }
      },
      "toaster2_make-toast_input": {
        "title": "toaster2_make-toast_input",
        "type": "object",
        "properties": {
          "toasterDoneness": {
            "description": "This variable controls how well-done is the\n      ensuing toast. It should be on a scale of 1 to 10.\n      Toast made at 10 generally is considered unfit\n      for human consumption; toast made at 1 is warmed\n      lightly.",
            "type": "integer",
            "format": "int64",
            "default": 5,
            "example": 1
          },
          "toasterToastType": {
            "description": "This variable informs the toaster of the type of\n      material that is being toasted. The toaster\n      uses this information, combined with\n      toasterDoneness, to compute for how\n      long the material must be toasted to achieve\n      the required doneness.",
            "type": "string",
            "enum": [
              "toast-type",
              "hash-brown",
              "wheat-bread",
              "wonder-bread",
              "frozen-bagel",
              "frozen-waffle",
              "white-bread"
            ],
            "default": "wheat-bread",
            "example": "toast-type"
          }
        },
        "xml": {
          "name": "input",
          "namespace": "http://netconfcentral.org/ns/toaster2"
        }
      },
      "toaster2_restock-toaster_input": {
        "title": "toaster2_restock-toaster_input",
        "type": "object",
        "properties": {
          "amountOfBreadToStock": {
            "description": "Indicates the amount of bread to re-stock",
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        },
        "xml": {
          "name": "input",
          "namespace": "http://netconfcentral.org/ns/toaster2"
        }
      },
      "toaster2_toaster": {
        "title": "toaster2_toaster",
        "type": "object",
        "description": "Top-level container for all toaster database objects.",
        "properties": {
          "darknessFactor": {
            "description": "The darkness factor. Basically, the number of ms to multiple the doneness value by.",
            "type": "integer",
            "format": "int64",
            "default": 1000,
            "example": 0
          },
          "toasterSlot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/toaster2_toaster_toasterSlot"
            },
            "description": ""
          }
        },
        "xml": {
          "name": "toaster",
          "namespace": "http://netconfcentral.org/ns/toaster2"
        }
      },
      "toaster2_toaster_toasterSlot": {
        "title": "toaster2_toaster_toasterSlot",
        "type": "object",
        "properties": {
          "slotId": {
            "description": "",
            "type": "string",
            "example": "Some slotId"
          },
          "slotInfo": {
            "$ref": "#/components/schemas/toaster2_toaster_toasterSlot_slotInfo"
          }
        },
        "xml": {
          "name": "toasterSlot",
          "namespace": "http://netconfcentral.org/ns/toaster2"
        }
      },
      "toaster2_toaster_toasterSlot_slotInfo": {
        "title": "toaster2_toaster_toasterSlot_slotInfo",
        "type": "object",
        "properties": {
          "numberOfToastPrepared": {
            "description": "",
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        },
        "xml": {
          "name": "slotInfo",
          "namespace": "http://netconfcentral.org/ns/toaster/augmented"
        }
      },
      "typed-params_typed": {
        "title": "typed-params_typed",
        "type": "object",
        "properties": {
          "string": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_string"
            },
            "description": ""
          },
          "instance-identifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_instance-identifier"
            },
            "description": ""
          },
          "bits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_bits"
            },
            "description": ""
          },
          "union": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_union"
            },
            "description": ""
          },
          "empty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_empty"
            },
            "description": ""
          },
          "int16": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_int16"
            },
            "description": ""
          },
          "boolean": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_boolean"
            },
            "description": ""
          },
          "int32": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_int32"
            },
            "description": ""
          },
          "int64": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_int64"
            },
            "description": ""
          },
          "binary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_binary"
            },
            "description": ""
          },
          "int8": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_int8"
            },
            "description": ""
          },
          "uint64": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_uint64"
            },
            "description": ""
          },
          "decimal64": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_decimal64"
            },
            "description": ""
          },
          "uint32": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_uint32"
            },
            "description": ""
          },
          "enumeration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_enumeration"
            },
            "description": ""
          },
          "uint8": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_uint8"
            },
            "description": ""
          },
          "uint16": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typed-params_typed_uint16"
            },
            "description": ""
          }
        },
        "xml": {
          "name": "typed",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_string": {
        "title": "typed-params_typed_string",
        "type": "object",
        "properties": {
          "string-key": {
            "description": "",
            "type": "string",
            "example": "Some string-key"
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "string",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_binary": {
        "title": "typed-params_typed_binary",
        "type": "object",
        "properties": {
          "binary-key": {
            "description": "",
            "type": "string",
            "format": "byte"
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "binary",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_bits": {
        "title": "typed-params_typed_bits",
        "type": "object",
        "properties": {
          "bits-key": {
            "description": "",
            "type": "string",
            "enum": [
              "UP"
            ],
            "minItems": 0,
            "default": "UP UP",
            "uniqueItems": true
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "bits",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_boolean": {
        "title": "typed-params_typed_boolean",
        "type": "object",
        "properties": {
          "boolean-key": {
            "description": "",
            "type": "boolean",
            "example": true
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "boolean",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_empty": {
        "title": "typed-params_typed_empty",
        "type": "object",
        "properties": {
          "empty-key": {
            "description": "",
            "type": "object"
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "empty",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_enumeration": {
        "title": "typed-params_typed_enumeration",
        "type": "object",
        "properties": {
          "enumeration-key": {
            "description": "",
            "type": "string",
            "enum": [
              "first",
              "second",
              "third"
            ],
            "example": "first"
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "enumeration",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_instance-identifier": {
        "title": "typed-params_typed_instance-identifier",
        "type": "object",
        "properties": {
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          },
          "instance-identifier-key": {
            "description": "",
            "type": "string",
            "example": "/tparams:typed"
          }
        },
        "xml": {
          "name": "instance-identifier",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_int8": {
        "title": "typed-params_typed_int8",
        "type": "object",
        "properties": {
          "int8-key": {
            "description": "",
            "type": "integer",
            "format": "int32",
            "example": -128
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "int8",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_int16": {
        "title": "typed-params_typed_int16",
        "type": "object",
        "properties": {
          "int16-key": {
            "description": "",
            "type": "integer",
            "format": "int32",
            "example": -32768
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "int16",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_int32": {
        "title": "typed-params_typed_int32",
        "type": "object",
        "properties": {
          "int32-key": {
            "description": "",
            "type": "integer",
            "format": "int32",
            "example": -2147483648
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "int32",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_int64": {
        "title": "typed-params_typed_int64",
        "type": "object",
        "properties": {
          "int64-key": {
            "description": "",
            "type": "integer",
            "format": "int64",
            "example": -9223372036854776000
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "int64",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_uint8": {
        "title": "typed-params_typed_uint8",
        "type": "object",
        "properties": {
          "uint8-key": {
            "description": "",
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "uint8",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_uint16": {
        "title": "typed-params_typed_uint16",
        "type": "object",
        "properties": {
          "uint16-key": {
            "description": "",
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "uint16",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_uint32": {
        "title": "typed-params_typed_uint32",
        "type": "object",
        "properties": {
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          },
          "uint32-key": {
            "description": "",
            "type": "integer",
            "format": "int64",
            "example": 0
          }
        },
        "xml": {
          "name": "uint32",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_uint64": {
        "title": "typed-params_typed_uint64",
        "type": "object",
        "properties": {
          "uint64-key": {
            "description": "",
            "type": "integer",
            "example": 0
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "uint64",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_decimal64": {
        "title": "typed-params_typed_decimal64",
        "type": "object",
        "properties": {
          "decimal64-key": {
            "description": "",
            "type": "number",
            "example": -92233720368547760
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "decimal64",
          "namespace": "urn:typed-params"
        }
      },
      "typed-params_typed_union": {
        "title": "typed-params_typed_union",
        "type": "object",
        "properties": {
          "union-key": {
            "description": "",
            "type": "integer",
            "format": "int32",
            "example": -2147483648
          },
          "value": {
            "description": "",
            "type": "string",
            "example": "Some value"
          }
        },
        "xml": {
          "name": "union",
          "namespace": "urn:typed-params"
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}