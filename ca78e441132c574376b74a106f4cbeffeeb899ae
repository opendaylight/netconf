{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1f5813c2_8dc781df",
        "filename": "apps/restconf-it/src/test/java/org/opendaylight/restconf/it/subscription/AbstractNotificationSubscriptionTest.java",
        "patchSetId": 10
      },
      "lineNbr": 283,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "Probably this left from dev testing.",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a031aeba_958a2fa8",
        "filename": "apps/restconf-it/src/test/java/org/opendaylight/restconf/it/subscription/AbstractNotificationSubscriptionTest.java",
        "patchSetId": 10
      },
      "lineNbr": 283,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f5813c2_8dc781df",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1797f779_5e0c3799",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 242,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "Move this class after the \"enum State\" object in this class to keep order in method visibility.",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f51c235_2016614b",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 242,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1797f779_5e0c3799",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1343364_f203f3f4",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 266,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "I would keep reverse order of how you initialize objects here, even if it seems that leaderReg does not affect others objects.\n\nOr you can switch initialization of leaderReg after tclReg.",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0392f60b_67340762",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 266,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:58:21Z",
      "side": 1,
      "message": "I would keep reverse order of how you **close** objects here,",
      "parentUuid": "e1343364_f203f3f4",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff73de55_d741c1aa",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 266,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0392f60b_67340762",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6f6a6b0_a9b28dc5",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 554,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T13:41:16Z",
      "side": 1,
      "message": "With this approach:\nprotocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java\n\nThis code could be changed to the following (Both code advises needs more testing):\n```\n    protected synchronized ListenableFuture\u003cVoid\u003e filtersOperationalViewUpdated(final Set\u003cString\u003e workingNames,\n            final Map\u003cString,@Nullable ChoiceNode\u003e nameToSpec) {\n        if (!isLeader.get()) {\n            return Futures.immediateVoidFuture();\n        }\n\n        final var tx \u003d dataBroker.newWriteOnlyTransaction();\n        for (final var name : workingNames) {\n            final var path \u003d FILTERS_OPER_PATH\n                .node(NodeIdentifierWithPredicates.of(StreamFilter.QNAME, NAME_QNAME, name))\n                .node(FILTER_SPEC_NODEID);\n\n            final var choiceNode \u003d nameToSpec.get(name);\n            if (choiceNode !\u003d null) {\n                // spec compiled OK → publish it in OPERATIONAL\n                tx.put(LogicalDatastoreType.OPERATIONAL, path, choiceNode);\n            } else {\n                // spec failed → make sure it is absent from OPERATIONAL\n                tx.delete(LogicalDatastoreType.OPERATIONAL, path);\n            }\n        }\n        return tx.commit().transform(info -\u003e {\n            LOG.debug(\"Filter operational view updated {}\", info);\n            return null;\n        }, MoreExecutors.directExecutor());\n    }\n```",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fed9dd3b_1f2e3ac5",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 556,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T12:17:48Z",
      "side": 1,
      "message": "Futures.immediateVoidFuture();",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d585877_b6692292",
        "filename": "plugins/restconf-server-mdsal/src/main/java/org/opendaylight/restconf/server/mdsal/MdsalRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 556,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fed9dd3b_1f2e3ac5",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ac4bbf6_91c27600",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "final",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63e86b4d_77f9744b",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T08:09:25Z",
      "side": 1,
      "message": "Cannot be final since it can be replaced by a new one in AbstractRestconfStreamRegistry#modifySubscription",
      "parentUuid": "5ac4bbf6_91c27600",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d431d904_4b543c5f",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 406,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "Probably this should be new ReentrantLock(true).\n\nhttps://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/ReentrantLock.html#ReentrantLock-boolean-\n\nWithout this, it will randomly give access to threads which request to access the \u0027filterLock\u0027",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15c3b993_89b5ea98",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 406,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d431d904_4b543c5f",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ec5c5f_ab206764",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 407,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "The protected attribute should be below private attributes, separate by empty space.",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c105e1c_028bdc38",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 407,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5ec5c5f_ab206764",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "349f31e6_2ae0ea3e",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 799,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T12:39:46Z",
      "side": 1,
      "message": "Is there any reason why to use filterSpecs attribute? And not this approach?\n\n```\n    protected final void updateFilterDefinitions(final Map\u003cString,@Nullable ChoiceNode\u003e nameToSpec) {\n        filterLock.lock();\n        final var acquire \u003d new HashMap\u003c\u003e(filters.getAcquire());\n        try {\n            nameToSpec.forEach((name, spec) -\u003e {\n                if (spec \u003d\u003d null \u0026\u0026 acquire.remove(name) !\u003d null) {\n                    LOG.debug(\"Removed filter {} without specification\", name);\n                } else {\n                    try {\n                        final var eventStreamFilter \u003d parseFilter(spec);\n                        acquire.put(name, eventStreamFilter);\n                        LOG.debug(\"Updated filter {} to {}\", name, eventStreamFilter);\n                    } catch (RequestException e) {\n                        LOG.warn(\"Filter not parsed {}, ignored\", spec, e);\n                    }\n                }\n            });\n            rebuildFiltersLocked(nameToSpec.keySet());\n            filters.setRelease(ImmutableMap.copyOf(acquire));\n            // Callback to update operational datastore with the list of filter names that compiled successfully\n            filtersOperationalViewUpdated(filters.getAcquire().keySet());\n            refreshSubscriptions(nameToSpec.keySet());\n        } finally {\n            filterLock.unlock();\n        }\n    }\n```",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbacc68c_38700203",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 806,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "Missing space",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b37a64f_072d3376",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 806,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbacc68c_38700203",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42ba13d2_e55aea6d",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 843,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "Do we need to have ListenableFuture\u003cVoid\u003e as return variable here when it is not used? Can we utilize it here?",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df548c2f_29e93cea",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 843,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42ba13d2_e55aea6d",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d08ee8f9_18689f09",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 855,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-08-13T10:56:49Z",
      "side": 1,
      "message": "Please comment out also else statement. Now it is code smell for else without body.",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3316328_966cb289",
        "filename": "protocol/restconf-server-spi/src/main/java/org/opendaylight/restconf/server/spi/AbstractRestconfStreamRegistry.java",
        "patchSetId": 10
      },
      "lineNbr": 855,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-08-14T07:44:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d08ee8f9_18689f09",
      "revId": "ca78e441132c574376b74a106f4cbeffeeb899ae",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}