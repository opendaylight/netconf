{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6a95fbbe_54feddce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8894
      },
      "writtenOn": "2022-11-10T09:19:17Z",
      "side": 1,
      "message": "unit test coverage is reqiured",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc010ca4_8145e850",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-11-10T09:09:46Z",
      "side": 1,
      "message": "Do we need to have complete `Module` process to be in `try-catch`? Cannot we just log warning/error when we are not able to parse features?\n\nIn addition, if we eliminate blocking call we do not need this catch. There as multiple async block here thus is should be doable.",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27e259e0_bea56586",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 8449
      },
      "writtenOn": "2022-11-10T13:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc010ca4_8145e850",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eca57b2_6fb04e21",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 8449
      },
      "writtenOn": "2022-11-10T13:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc010ca4_8145e850",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b36e736c_f7b02fab",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-11-10T09:09:46Z",
      "side": 1,
      "message": "Try to use async call if possible. And rework another logic as necessary.",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d381f561_80ab4130",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 8449
      },
      "writtenOn": "2022-11-10T13:42:23Z",
      "side": 1,
      "message": "SchemaSource is required right after in the next line. So this will be pointless.",
      "parentUuid": "b36e736c_f7b02fab",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2252e774_9351698c",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 167,
      "author": {
        "id": 8449
      },
      "writtenOn": "2023-02-27T12:47:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d381f561_80ab4130",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3fa014e_a3f548a9",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 8894
      },
      "writtenOn": "2022-11-10T09:19:17Z",
      "side": 1,
      "message": "to avoid NPEs at string.equals() it\u0027s a good habit to place constants first\nlike below\n\"feature\".equals(statement.keyword().identifier())",
      "range": {
        "startLine": 176,
        "startChar": 16,
        "endLine": 176,
        "endChar": 66
      },
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed05916e_93d947d2",
        "filename": "netconf/yanglib/src/main/java/org/opendaylight/yanglib/impl/YangLibProvider.java",
        "patchSetId": 3
      },
      "lineNbr": 176,
      "author": {
        "id": 8449
      },
      "writtenOn": "2022-11-10T13:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3fa014e_a3f548a9",
      "range": {
        "startLine": 176,
        "startChar": 16,
        "endLine": 176,
        "endChar": 66
      },
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1763adcd_fc361e74",
        "filename": "netconf/yanglib/src/test/java/org/opendaylight/yanglib/impl/YangLibProviderTest.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-11-10T09:09:46Z",
      "side": 1,
      "message": "Can we test something reals instead of empty set?",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da6185f3_6968a2e3",
        "filename": "netconf/yanglib/src/test/java/org/opendaylight/yanglib/impl/YangLibProviderTest.java",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 8449
      },
      "writtenOn": "2022-11-10T13:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1763adcd_fc361e74",
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "717a8779_b5864c86",
        "filename": "netconf/yanglib/src/test/java/org/opendaylight/yanglib/impl/YangLibProviderTest.java",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 8894
      },
      "writtenOn": "2022-11-10T09:19:17Z",
      "side": 1,
      "message": "setting features is a new peace of logic provided by current change.\nnon-empty set of features case require to be covered by unit test",
      "range": {
        "startLine": 135,
        "startChar": 15,
        "endLine": 135,
        "endChar": 37
      },
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d065de8d_bbf97279",
        "filename": "netconf/yanglib/src/test/java/org/opendaylight/yanglib/impl/YangLibProviderTest.java",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 8449
      },
      "writtenOn": "2022-11-10T13:42:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "717a8779_b5864c86",
      "range": {
        "startLine": 135,
        "startChar": 15,
        "endLine": 135,
        "endChar": 37
      },
      "revId": "fb3fb0946f3326889b6955246377941aba2cf00f",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}