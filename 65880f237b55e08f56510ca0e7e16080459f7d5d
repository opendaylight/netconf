{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "17d7d7d7_6f3aabe3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8312
      },
      "writtenOn": "2025-10-25T01:39:51Z",
      "side": 1,
      "message": "Sorry, just need to test something here with a comment.",
      "revId": "65880f237b55e08f56510ca0e7e16080459f7d5d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b1458ed_116103b5",
        "filename": "plugins/netconf-client-mdsal/src/main/java/org/opendaylight/netconf/client/mdsal/NetconfDeviceCommunicator.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-10-27T21:33:57Z",
      "side": 1,
      "message": "Should it be guarded by `isDebugEnabled()` as well?",
      "revId": "65880f237b55e08f56510ca0e7e16080459f7d5d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7f6af3e_f2de23ab",
        "filename": "plugins/netconf-client-mdsal/src/main/java/org/opendaylight/netconf/client/mdsal/NetconfDeviceCommunicator.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-28T08:10:33Z",
      "side": 1,
      "message": "IDK please check here: https://docs.opendaylight.org/en/latest/developer-guides/logging-subsystem.html",
      "parentUuid": "2b1458ed_116103b5",
      "revId": "65880f237b55e08f56510ca0e7e16080459f7d5d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da179b68_a8d5b9ef",
        "filename": "plugins/netconf-client-mdsal/src/main/java/org/opendaylight/netconf/client/mdsal/NetconfDeviceCommunicator.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 9173
      },
      "writtenOn": "2025-10-28T08:37:20Z",
      "side": 1,
      "message": "According to the guide, we should avoid using `isDebugEnabled()`, but there can be an exception in case of logging something that has some cost to calculate `msgToS(message)`",
      "parentUuid": "c7f6af3e_f2de23ab",
      "revId": "65880f237b55e08f56510ca0e7e16080459f7d5d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7543b5fb_a0597512",
        "filename": "plugins/netconf-client-mdsal/src/main/java/org/opendaylight/netconf/client/mdsal/NetconfDeviceCommunicator.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 8449
      },
      "writtenOn": "2025-10-28T15:25:38Z",
      "side": 1,
      "message": "Based on https://www.slf4j.org/faq.html#logging_performance\n\"After evaluating whether to log or not, and only if the decision is affirmative, will the logger implementation format the message and replace the \u0027{}\u0027 pair with the string value of entry. In other words, this form does not incur the cost of parameter construction in case the log statement is disabled.\"\n\nThe construction of msgToS(message) is not called if debug is disabled. Usage of \"isDebugEnabled()\" makes sense when a logger is used without parameterized messages:\n\n```\nif(logger.isDebugEnabled()) {\n  logger.debug(\"Entry number: \" + i + \" is \" + String.valueOf(entry[i]));\n}\n```\n\nWhich is not recommended too.",
      "parentUuid": "da179b68_a8d5b9ef",
      "revId": "65880f237b55e08f56510ca0e7e16080459f7d5d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}