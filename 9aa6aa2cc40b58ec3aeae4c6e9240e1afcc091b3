{
  "comments": [
    {
      "key": {
        "uuid": "fafc7978_b56cd19e",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-03-28T14:16:28Z",
      "side": 1,
      "message": "this creates strong runtime binding. no production code should ever do this kind of thing. This needs a clean solution.",
      "range": {
        "startLine": 105,
        "startChar": 43,
        "endLine": 105,
        "endChar": 114
      },
      "revId": "9aa6aa2cc40b58ec3aeae4c6e9240e1afcc091b3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafc7978_a1eda1b9",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 7178
      },
      "writtenOn": "2017-03-30T23:51:16Z",
      "side": 1,
      "message": "Different Types in Yang Models are mapped into different classes which implement NormalizedNode and are defined in Yangtools.\nI don\u0027t think we should create wrapped classes for every type.\nAnother way maybe using proxy object to wrap these payloads, but it also introduces runtime binding.",
      "parentUuid": "fafc7978_b56cd19e",
      "range": {
        "startLine": 105,
        "startChar": 43,
        "endLine": 105,
        "endChar": 114
      },
      "revId": "9aa6aa2cc40b58ec3aeae4c6e9240e1afcc091b3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da01753e_057646a4",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 649
      },
      "writtenOn": "2017-04-19T21:02:58Z",
      "side": 1,
      "message": "No. I think NETCONF should be exposing an extension of DOMDataBroker which would expose appropriate methods, so RESTCONF can actually invoke the correct methods.\n\nThis string check, or its equivalent \u0027data instalceof PostNormalizedNode\u0027, mean the two component\u0027s implementation are fused toghether: NETCONF should not care who it is who is making the request, much less about what is the implementation class.",
      "parentUuid": "fafc7978_a1eda1b9",
      "range": {
        "startLine": 105,
        "startChar": 43,
        "endLine": 105,
        "endChar": 114
      },
      "revId": "9aa6aa2cc40b58ec3aeae4c6e9240e1afcc091b3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da01753e_45468e7d",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 7178
      },
      "writtenOn": "2017-04-20T01:25:18Z",
      "side": 1,
      "message": "So every module (i.e. RESTCONF) which uses NETCONF need convert this general DOMDataBroker into an extension one to invoke another appropriate method(i.e. post).\nIs it what you mean?",
      "parentUuid": "da01753e_057646a4",
      "range": {
        "startLine": 105,
        "startChar": 43,
        "endLine": 105,
        "endChar": 114
      },
      "revId": "9aa6aa2cc40b58ec3aeae4c6e9240e1afcc091b3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}