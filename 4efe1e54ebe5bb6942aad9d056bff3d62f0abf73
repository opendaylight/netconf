{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0d81742f_16b4314d",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-03-16T10:35:35Z",
      "side": 1,
      "message": "What is the difference between sessions and existing sessions?",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ea11692_ca558143",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 9048
      },
      "writtenOn": "2022-03-16T12:24:39Z",
      "side": 1,
      "message": "For the first time, I wanted to use a map of sessions, but I faced a problem. Due to key re-exchange, I need to know if is certain session already running or not. \nA session is inserted to map sessions immediately, so I cannot verify when it was null. It uses the putIfAbsent method, which returns null when the session was not created, as an indicator that the session is created for first. If it is already in the map, it throws value (session object).\n\nSo, I created existingSessions, when I store returned value of this method  (null\u003dfalse, object\u003dtrue) with an associated session ID. \nBased on this map, in method NetconfCallhomeServer.createSessionListener(), I can call doAuth(), only in case of creating a new session, not call it again when the session is running (it was the method that was causing this issue).",
      "parentUuid": "0d81742f_16b4314d",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99766364_fbb69108",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-03-24T14:00:06Z",
      "side": 1,
      "message": "`private final Map\u003cString, Boolean\u003e existingSessions \u003d new ConcurrentHashMap\u003c\u003e()`\n\nshould be enough.\n\nEven do we need a map? What about just set?",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e920b62_a0a51a59",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 9048
      },
      "writtenOn": "2022-03-25T12:57:41Z",
      "side": 1,
      "message": "In my opinion, using of Map is more accurate in this case. \nWhen a device was not connected before, a map looks as follows {sessionId\u003dfalse}, doAuth() is executed. \nWhen key re-exchange happens, based on the key (sessionId), his value is set to true {sessionId\u003dtrue}, doAuth() does not need to happen again.\nAs there is a second manipulation with the same key, value can be found easily and cannot be repeated in the map as well.",
      "parentUuid": "99766364_fbb69108",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbf7a342_b081a773",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-06-24T10:49:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ea11692_ca558143",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "574dc2b1_8a2d42f9",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 157,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-06-24T10:49:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e920b62_a0a51a59",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f91e166a_effe7e16",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-03-16T10:35:35Z",
      "side": 1,
      "message": "Has this to be public?",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2999779_35a7b914",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 9048
      },
      "writtenOn": "2022-03-16T12:24:39Z",
      "side": 1,
      "message": "No, it does not need to be. If you mean there should be a DEFAULT access modifier, \nas it is in the case of other methods in Factory.java, I will make a change.",
      "parentUuid": "f91e166a_effe7e16",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5137fef_47575bc9",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-06-24T10:49:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2999779_35a7b914",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ace556e0_fdab656e",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-03-16T10:35:35Z",
      "side": 1,
      "message": "Check style violation here.\n\nIt needs empty line.",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9188d437_3b2aeec0",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/CallHomeSessionContext.java",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 9048
      },
      "writtenOn": "2022-03-16T12:24:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ace556e0_fdab656e",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cae6652c_b3b43486",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/NetconfCallHomeServer.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 8144
      },
      "writtenOn": "2022-03-16T10:35:35Z",
      "side": 1,
      "message": "final",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf0251b4_4ded4667",
        "filename": "netconf/callhome-protocol/src/main/java/org/opendaylight/netconf/callhome/protocol/NetconfCallHomeServer.java",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 9048
      },
      "writtenOn": "2022-03-16T12:25:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cae6652c_b3b43486",
      "revId": "4efe1e54ebe5bb6942aad9d056bff3d62f0abf73",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}