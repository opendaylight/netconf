{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_58b8a129",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T07:59:00Z",
      "side": 1,
      "message": "Check or Check out\n\nAnyway, I think the stackoverflow question you have posted is more concerned about order of modifier of one specific member, not about order of members in class according to their modifiers. I guess it says that you should write public static final boolean CONST not final public static boolean CONSt",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_fb3c0731",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 3675
      },
      "writtenOn": "2016-09-22T11:29:23Z",
      "side": 1,
      "message": "\u003e Anyway, I think the stackoverflow question you have posted is more concerned about order of modifier of one specific member, not about order of members in class according to their modifiers. I guess it says that you should write public static final boolean CONST not final public static boolean CONSt\n\nAre you saying we should use a different order than the one I\u0027ve proposed here? \nAs I said, I don\u0027t have strong opinion on this, purpose is really to refactor the class\u0027s methods so it\u0027s more tidy.",
      "parentUuid": "7a6b29fe_58b8a129",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_9bf1936d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T11:46:23Z",
      "side": 1,
      "message": "No I am not saying nothing about ordering. I just think that SO question you have posted here is about something else than ordering of the members in class. (I think it is about ordering of modifiers of one specific member)",
      "parentUuid": "7a6b29fe_fb3c0731",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_fb86c7b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 3675
      },
      "writtenOn": "2016-09-22T11:51:02Z",
      "side": 1,
      "message": "I understand now. Sorry, I\u0027m slow this am. I\u0027m really not a Java expert so I couldn\u0027t tell what\u0027s the best order for methods, based on their modifiers. I was actually hoping for a Java expert\u0027s review :) From what I\u0027ve seen here and there, I think the abstracts method should be listed first. But I really don\u0027t know.",
      "parentUuid": "7a6b29fe_9bf1936d",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_38b3254e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T07:59:00Z",
      "side": 1,
      "message": "personally",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_d87b1179",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T07:59:00Z",
      "side": 1,
      "message": "refactored",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_b87e1568",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T07:59:00Z",
      "side": 1,
      "message": "Maybe restrict would be better",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_38e1652a",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T07:59:00Z",
      "side": 1,
      "message": "Maybe this does not have to be public.",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_5bc37b37",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 3675
      },
      "writtenOn": "2016-09-22T11:29:23Z",
      "side": 1,
      "message": "I agree.",
      "parentUuid": "7a6b29fe_38e1652a",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_18e0e927",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T07:59:00Z",
      "side": 1,
      "message": "Is there any point in having package private constructor but also protected abstract methods? I mean you cannot extend the class in another package because of constructor.",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_1bd463ea",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 3675
      },
      "writtenOn": "2016-09-22T11:29:23Z",
      "side": 1,
      "message": "I assume what you meant is the protected abstract methods should just be abstract, no need for them to be protected, as anyway they can\u0027t be more than package private because of the constructor.\n\nIf my understanding is correct, I can submit a new patch set with those changes.",
      "parentUuid": "7a6b29fe_18e0e927",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_7bf4775a",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-09-22T11:46:23Z",
      "side": 1,
      "message": "Yes that\u0027s what I\u0027ve meant.",
      "parentUuid": "7a6b29fe_1bd463ea",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_3b8ddfd3",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 3675
      },
      "writtenOn": "2016-09-22T11:51:02Z",
      "side": 1,
      "message": "Ack, will do that.",
      "parentUuid": "7a6b29fe_7bf4775a",
      "revId": "2cf7c27db2d1ba354e766ba5c872cba318758306",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}