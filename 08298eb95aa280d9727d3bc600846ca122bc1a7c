{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "32c730fa_c23e9e35",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 76,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-23T12:21:38Z",
      "side": 1,
      "message": "IMO we would need to use lock or AtomicReference",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "889f4f1c_0c9259c1",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 76,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-23T13:23:14Z",
      "side": 1,
      "message": "all interactions with blockedRequests are done inside ctx.executor().execute() which is single thread executor, so theoretically it should not be necessary",
      "parentUuid": "32c730fa_c23e9e35",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43fef4d4_7619ad2a",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 76,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-28T09:00:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "889f4f1c_0c9259c1",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e90944b_aae86c38",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 76,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-28T09:01:34Z",
      "side": 1,
      "message": "What about this one above: blockedRequests.isEmpty();?",
      "parentUuid": "43fef4d4_7619ad2a",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dd57d26_1c3950a3",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 76,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-28T10:30:39Z",
      "side": 1,
      "message": "https://netty.io/wiki/new-and-noteworthy-in-4.0.html#well-defined-thread-model\n\n\"EventExecutor and EventLoop assigned to a handler or a channel are always single-threaded\nThe handler methods will always be invoked by the same thread.\"\n\nAlso there is example in https://netty.io/4.1/api/io/netty/channel/ChannelHandler.html at section State management\n\nhttps://www.k0d.cc/storage/books/JAVA/Netty%20in%20Action.pdf\nchapter 7.4.2\nfigure 7.4\n\"For the lifetime of each Channel, all operations are executed by the same Thread.\"",
      "parentUuid": "5e90944b_aae86c38",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fcef217_d8639ab7",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 104,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-23T12:25:16Z",
      "side": 1,
      "message": "should we use try with resources for executor?",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c703235e_f4f9ef23",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 104,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-23T13:13:50Z",
      "side": 1,
      "message": "https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\ntry-with-resources close all resources at the end, so IMO that would mean we would close netty executor? I don\u0027t think we want to do that.",
      "parentUuid": "1fcef217_d8639ab7",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "311286d7_f63419c8",
        "filename": "protocol/restconf-server/src/main/java/org/opendaylight/restconf/server/RestconfSession.java",
        "patchSetId": 24
      },
      "lineNbr": 104,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-28T09:00:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c703235e_f4f9ef23",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec73b4ca_fa3d31f6",
        "filename": "transport/transport-http/src/main/java/org/opendaylight/netconf/transport/http/HTTPServerSession.java",
        "patchSetId": 24
      },
      "lineNbr": 289,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-23T12:15:00Z",
      "side": 1,
      "message": "undocumented",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9e2afc2_4d19ecdb",
        "filename": "transport/transport-http/src/main/java/org/opendaylight/netconf/transport/http/HTTPServerSession.java",
        "patchSetId": 24
      },
      "lineNbr": 289,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-23T12:59:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec73b4ca_fa3d31f6",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9377cac7_df1147ad",
        "filename": "transport/transport-http/src/main/java/org/opendaylight/netconf/transport/http/ResponseBodyOutputStream.java",
        "patchSetId": 24
      },
      "lineNbr": 409,
      "author": {
        "id": 8144
      },
      "writtenOn": "2025-10-23T12:15:00Z",
      "side": 1,
      "message": "why its used here and not in other close methods?",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5eec4576_928da3ff",
        "filename": "transport/transport-http/src/main/java/org/opendaylight/netconf/transport/http/ResponseBodyOutputStream.java",
        "patchSetId": 24
      },
      "lineNbr": 409,
      "author": {
        "id": 9229
      },
      "writtenOn": "2025-10-23T12:59:42Z",
      "side": 1,
      "message": "close in PendingBody and FirstChunk already calls session.respond() which trigger pipeline logic.\nhere close is called after chunked response was succesfully finished, there is no call for respond() so I added this to notify pipeline logic about finishing of response",
      "parentUuid": "9377cac7_df1147ad",
      "revId": "08298eb95aa280d9727d3bc600846ca122bc1a7c",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}