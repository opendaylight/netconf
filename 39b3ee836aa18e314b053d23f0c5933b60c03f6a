{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_64863667",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-08-12T08:46:10Z",
      "side": 1,
      "message": "No need to add new line",
      "revId": "39b3ee836aa18e314b053d23f0c5933b60c03f6a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_c47d8a70",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/AbstractWriteTx.java",
        "patchSetId": 5
      },
      "lineNbr": 109,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-08-12T08:46:10Z",
      "side": 1,
      "message": "Is there any point in renaming this method? You are still using it just to handle edit operation exceptions",
      "revId": "39b3ee836aa18e314b053d23f0c5933b60c03f6a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_d821eda0",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/WriteRunningTx.java",
        "patchSetId": 5
      },
      "lineNbr": 82,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-08-12T08:46:10Z",
      "side": 1,
      "message": "We are loosing information about exception t here. Is logging it enough? This applies also to two other write tx implementation you have changed",
      "revId": "39b3ee836aa18e314b053d23f0c5933b60c03f6a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_cd13ed64",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/WriteRunningTx.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-08-12T08:46:10Z",
      "side": 1,
      "message": "You are actually handling exception same way in all three tx implementation. \n\nWhy not to do this in AbstractWriteTx?",
      "revId": "39b3ee836aa18e314b053d23f0c5933b60c03f6a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_0f08322c",
        "filename": "netconf/sal-netconf-connector/src/main/java/org/opendaylight/netconf/sal/connect/netconf/sal/tx/WriteRunningTx.java",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 4580
      },
      "writtenOn": "2016-08-15T08:37:36Z",
      "side": 1,
      "message": "You are setting exception in future callback, but you are handling exception outside this callback. Future does not have to be finished at this point, so you can handle some unrelated exception or no exception at all.",
      "parentUuid": "7a6b29fe_cd13ed64",
      "revId": "39b3ee836aa18e314b053d23f0c5933b60c03f6a",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}