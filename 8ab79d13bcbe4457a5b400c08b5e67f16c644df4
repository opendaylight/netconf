{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bace91c2_74160823",
        "filename": "transport/transport-ssh/src/main/java/org/opendaylight/netconf/transport/ssh/SSHClient.java",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 8144
      },
      "writtenOn": "2024-11-20T09:46:03Z",
      "side": 1,
      "message": "onSessionClose is client and server seems to be duplicate code",
      "revId": "8ab79d13bcbe4457a5b400c08b5e67f16c644df4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be9b6d5b_4ce42609",
        "filename": "transport/transport-ssh/src/main/java/org/opendaylight/netconf/transport/ssh/SSHClient.java",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 8449
      },
      "writtenOn": "2024-11-20T12:03:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bace91c2_74160823",
      "revId": "8ab79d13bcbe4457a5b400c08b5e67f16c644df4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d6105d8_17dc0d1d",
        "filename": "transport/transport-ssh/src/main/java/org/opendaylight/netconf/transport/ssh/SSHTransportStack.java",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 8144
      },
      "writtenOn": "2024-11-20T09:46:03Z",
      "side": 1,
      "message": "Is this really error state? Why do we throw exception here?",
      "revId": "8ab79d13bcbe4457a5b400c08b5e67f16c644df4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed05cc93_db0d45a0",
        "filename": "transport/transport-ssh/src/main/java/org/opendaylight/netconf/transport/ssh/SSHTransportStack.java",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 8449
      },
      "writtenOn": "2024-11-20T13:37:54Z",
      "side": 1,
      "message": "We are throwing an exception here to set the settable feature into a failure state:\nhttps://github.com/opendaylight/netconf/blob/master/protocol/netconf-client/src/main/java/org/opendaylight/netconf/client/ClientTransportChannelListener.java#L50\n\nThe reason for this is that the NetconfClientSession will not be created if the session was closed. So `operationComplete(final Future\u003cNetconfClientSession\u003e future)` method will not be invoked, which leads to an exceptional state.\n\n\nAn alternative solution I have in mind is to add timeout for `ListenableFuture\u003cNetconfClientSession\u003e connectFuture`\n\nhttps://github.com/opendaylight/netconf/blob/master/apps/netconf-topology/src/main/java/org/opendaylight/netconf/topology/spi/NetconfNodeHandler.java#L226C15-L226C67\n\nSomething like:\n```\n        TimeoutTask timeoutTask \u003d new TimeoutTask(connectFuture);\n        timer.newTimeout(timeoutTask, clientConfig.getConnectionTimeoutMillis(), TimeUnit.MILLISECONDS);\n```",
      "parentUuid": "6d6105d8_17dc0d1d",
      "revId": "8ab79d13bcbe4457a5b400c08b5e67f16c644df4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a0306d2_90d65391",
        "filename": "transport/transport-ssh/src/main/java/org/opendaylight/netconf/transport/ssh/SSHTransportStack.java",
        "patchSetId": 8
      },
      "lineNbr": 77,
      "author": {
        "id": 8144
      },
      "writtenOn": "2024-11-25T09:01:59Z",
      "side": 1,
      "message": "IDK, I guess no do not need any timeout. Anyway using exceptions to control application flow has been confirmed as incorrect here: https://git.opendaylight.org/gerrit/c/netconf/+/114354/comment/26f037ff_0065775c/.",
      "parentUuid": "ed05cc93_db0d45a0",
      "revId": "8ab79d13bcbe4457a5b400c08b5e67f16c644df4",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81"
    }
  ]
}